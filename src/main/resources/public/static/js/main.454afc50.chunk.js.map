{"version":3,"sources":["components/detailedView/Card.js","components/detailedView/Chart.js","components/StockDataContext.js","components/detailedView/StockData.js","components/favourites/FavContext.js","components/detailedView/StockHeader.js","components/detailedView/NewsItem.js","components/detailedView/News.js","components/detailedView/Video.js","components/DetailedView.js","components/ListItem.js","components/ListMain.js","components/UserContext.js","components/navbar/NavLinks.js","components/navbar/Navbar.js","components/navbar/useWindowSize.js","themes/modern-business-buildings.jpg","components/SearchBar.js","components/favourites/FavItem.js","components/favourites/Favourites.js","themes/themes.js","components/trade/TradeForm.js","components/trade/ConfirmDialog.js","components/trade/Trade.js","components/portfolio/HistoryItem.js","components/portfolio/History.js","components/portfolio/PortfolioItem.js","components/portfolio/Summary.js","components/portfolio/Portfolio.js","components/authentication/LoginForm.js","components/authentication/RegistrationForm.js","components/AboutPage.js","App.js","index.js"],"names":["Card","props","CardDiv","children","styled","div","Chart","symbol","data","chartdata","map","daily","x","Date","date","y","price","minY","Math","floor","min","point","options","animationEnabled","theme","height","title","text","fontSize","horizontalAlign","axisX","valueFormatString","crosshair","enabled","snapToDataPoint","axisY","minimum","labelFormatter","e","CanvasJS","formatNumber","value","type","xValueFormatString","yValueFormatString","dataPoints","sort","a","b","StockDataContext","createContext","StockDataProvider","useState","stockList","setStockList","stockData","setStockData","setStompClient","stockListTopic","process","stockDataTopic","onMessageHandler","message","destination","headers","JSON","parse","body","prevState","element","useEffect","axios","get","then","client","Client","brokerURL","onConnect","frame","subscribe","activate","deactivate","Provider","filter","s","stock","companyName","StockData","getData","useContext","priceData","lastTrade","lastTradeTime","marketCap","Intl","NumberFormat","format","avgVolume","avgTotalVolume","Table","StyledTr","TdLeft","TdRight","latestPrice","previousClose","week52Low","week52High","peRatio","round","ytdChange","toLocaleDateString","toLocaleTimeString","td","tr","table","FavContext","FavProvider","localStorage","getItem","favourites","setFavourites","prev","updated","setItem","stringify","filteredFav","f","dir","moveTo","movedItem","fav","movedIdx","indexOf","length","reordered","splice","FavouriteDiv","addToFav","removeFromFav","FavButton","onClick","stockdata","UnFavButton","TradeButton","StyledLink","to","tradeRoute","StockHeader","getStockName","SymbolHeader","Symbol","FloatDiv","ChangeDiv","up","change","changePercent","css","button","Link","NewsItem","Fragment","NewsSection","className","ImageContainer","alt","src","news","image","width","NewsContent","Title","href","url","headline","SourceInfo","source","datetime","toLocaleString","summary","News","style","newsDivStyle","n","i","margin","maxWidth","minWidth","Video","random","videos","VideoContainer","CustomReactPlayer","videoId","ReactPlayer","DetailedView","stockInfo","setStockInfo","useParams","fetch","resp","json","catch","console","log","DetailedContainer","StockDiv","HeaderDiv","DataDiv","ChartDiv","stockPrices","videoLinkList","newsList","ListItem","symbolData","color","Summary","DetailsLink","Tip","span","ListMain","ListContainer","Center","List","UserContext","UserProvider","loggedIn","userName","undefined","userData","setUserData","document","cookie","split","find","row","startsWith","NavLinks","close","menuType","closeMenu","removeCookie","name","username","Navbar","size","setSize","useLayoutEffect","updateSize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","isOpen","setIsOpen","Container","NavDiv","onStateChange","state","handleStateChange","SearchBar","symbolList","results","setResults","ResultItem","BackGround","WrapperDiv","SearchDiv","SearchField","placeholder","onChange","event","searchTerm","target","toLowerCase","item","includes","slice","handleOnChange","SearchButton","DropDownDiv","DropDownList","input","img1","FavItem","move","Fav","ButtonsUpDown","Content","Icon","Details","Cell","Favourites","favDivStyle","messageStyle","textAlign","themes","light","dark","TradeForm","limitPrice","count","direction","handleChange","handleSubmit","selectSymbol","notAllValid","React","setValue","StyledForm","autoComplete","Autocomplete","newValue","renderInput","params","TextField","label","FormControl","InputLabel","Select","MenuItem","InputProps","inputProps","step","Button","disabled","variant","form","ConfirmDialog","confirmClose","confirmIsOpen","Dialog","open","onClose","DialogTitle","id","DialogContent","DialogContentText","DialogActions","autoFocus","Trade","match","setSymbol","setLimitPrice","setDirection","setCount","redirect","setRedirect","setOpen","error","setError","setConfirmOpen","setNotAllValid","createFeedbackMessage","msg","handleBadRequest","response","ok","status","err","showError","Error","statusText","func","TradeDiv","StyledH2","Modal","ModalContent","token","method","h2","HistoryItem","transaction","DataCell","transactionTime","replace","stockChange","abs","stockPrice","toFixed","stockCountAfter","balanceAfter","History","forwardRef","ref","HistoryTable","Header","HeaderCell","currency","transactions","compare","h","thead","th","PortfolioItem","tradeLink","latest","useMemo","dates","t","reduce","max","toISOString","createRef","BlueButtonRight","substring","amount","accountBalance","user","account","balance","stockValue","portfolio","getStockPrice","firstName","lastName","Portfolio","setUser","owned","setOwned","previous","setPrevious","PortfolioDiv","userHistoryList","o","LoginForm","setMessage","loginEmail","useRef","loginPassword","validEmailFeedback","setValidEmail","validPasswordFeedback","setValidPassword","emailCharByChar","setEmailCharByChar","anyEmpty","setAnyEmpty","messages","emailIsValid","test","current","passwordIsValid","isAnyEmpty","validateInput","StyledDiv","required","fullWidth","inputRef","helperText","password","Typography","align","tabIndex","role","RegistrationForm","hasTermsOfServiceError","setHasTermsOfServiceError","messageOpen","registerFirstName","registerLastName","registerEmail","registerPassword","registerPasswordRepeat","registerTermsCheckbox","validFirstNameFeedback","setValidFirstName","validLastNameFeedback","setValidLastName","passwordCharByChar","setPasswordCharByChar","email","fieldIsValid","password1","password2","validFormData","firstValid","lastValid","emailValid","passwordValid","FormControlLabel","marginRight","control","Checkbox","checked","success","AboutPage","about","setAbout","details","AboutContainer","ReactMarkdown","App","setTheme","currentTheme","path","component","exact","require","config","ReactDOM","render","StrictMode","getElementById"],"mappings":"6hBAIe,SAASA,EAAKC,GACzB,OAAO,cAACC,EAAD,UAAUD,EAAME,WAG3B,IAAMD,EAAUE,IAAOC,IAAV,K,gBCHN,SAASC,EAAML,GAClB,IAAMM,EAASN,EAAMM,OACfC,EAAOP,EAAMQ,UAAUC,KAAI,SAAAC,GAAK,MAAK,CAACC,EAAG,IAAIC,KAAKF,EAAMG,MAAOC,EAAGJ,EAAMK,UACxEC,EAAOT,EAAOU,KAAKC,MAAMD,KAAKE,IAAL,MAAAF,KAAI,YAASV,EAAKE,KAAI,SAAAW,GAAK,OAAIA,EAAMN,OAAK,GAAK,EAExEO,EAAU,CACZC,kBAAkB,EAClBC,MAAO,SACPC,OAAQ,IACRC,MAAM,CACFC,KAAK,kBAAD,OAAoBpB,GACxBqB,SAAU,GACVC,gBAAiB,UAErBC,MAAM,CACFC,kBAAmB,aACnBC,UAAW,CACPC,SAAS,EACTC,iBAAiB,IAGzBC,MAAO,CACHT,MAAO,sBACPK,kBAAmB,UACnBK,QAASnB,EACTe,UAAW,CACPC,SAAS,EACTC,iBAAiB,EACjBG,eAAgB,SAASC,GACrB,MAAO,IAAMC,IAASC,aAAaF,EAAEG,MAAO,aAIxDjC,KAAM,CAAC,CACHkC,KAAM,OACNC,mBAAoB,aACpBC,mBAAoB,UACpBC,WAAYrC,EAAKsC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEnC,EAAIoC,EAAEpC,QAIhD,OACI,cAACZ,EAAD,UACI,cAAC,IAAD,CAAesB,QAASA,M,+BC5CvB2B,EAAmBC,0BAEnBC,EAAoB,SAAClD,GAAW,IAAD,EACNmD,mBAAS,IADH,mBACjCC,EADiC,KACtBC,EADsB,OAENF,mBAAS,IAFH,mBAEjCG,EAFiC,KAEtBC,EAFsB,OAGHJ,qBAHG,mBAGrBK,GAHqB,WAMlCC,EAAiBC,aACjBC,EAAiBD,cAmBvB,SAASE,EAAiBC,GACtB,IAAMC,EAAcD,EAAQE,QAAQD,YAC9BvD,EAAOyD,KAAKC,MAAMJ,EAAQK,MAC5BJ,IAAgBL,GAChBF,EAAahD,GAEbuD,IAAgBH,GAChBJ,GAAa,SAAAY,GAAS,OAAIA,EAAU1D,KAChC,SAAA2D,GAAO,OAAIA,EAAQ9D,SAAWC,EAAKD,OAASC,EAAO6D,QAc/D,OAvCAC,qBAAU,WACNC,IAAMC,IANab,uEAOlBc,MAAK,SAAAjE,GAAI,OAAI8C,EAAa9C,EAAKA,WACjC,IAEH8D,qBAAU,WACN,IAAMI,EAAS,IAAIC,IAQnB,OAPAD,EAAOE,UAXYjB,qDAYnBe,EAAOG,UAAY,SAAAC,GACfJ,EAAOK,UAAUrB,EAAgBG,GACjCa,EAAOK,UAAUnB,EAAgBC,IAErCa,EAAOM,WACPvB,EAAeiB,GACR,kBAAMA,EAAOO,gBACrB,IAyBC,cAAChC,EAAiBiC,SAAlB,CAA2BzC,MAAO,CANtC,SAAsBlC,GAAS,IAAD,EACV8C,EAAU8B,QAAO,SAAAC,GAAC,OAAIA,EAAE7E,SAAWA,KAA5C8E,EADmB,oBAE1B,OAAOA,GAASA,EAAMC,aAI2B/B,EAXrD,SAAkBhD,GAAS,IAAD,EACNgD,EAAU4B,QAAO,SAAAC,GAAC,OAAIA,EAAE7E,SAAWA,KACnD,OAFsB,qBAWgD8C,EAAU3C,KAAI,SAAA0E,GAAC,OAAIA,EAAE7E,WAA3F,SACKN,EAAME,Y,ugBCnDZ,SAASoF,EAAUtF,GACtB,IAAMuF,EAAUC,qBAAWxC,GAAkB,GACvCM,EAAYtD,EAAMO,KAClBkF,EAAYF,EAAQjC,EAAUhD,QAC9BoF,EAAY,IAAI9E,KAAK0C,EAAUqC,eAC/BC,GAAY,IAAIC,KAAKC,cAAeC,OAAOzC,EAAUsC,WACrDI,GAAY,IAAIH,KAAKC,cAAeC,OAAOzC,EAAU2C,gBAC3D,OACI,cAAClG,EAAD,UACI,cAACmG,EAAD,UACI,kCACKT,GAAa,eAACU,EAAD,WAAU,cAACC,EAAD,4BAA8B,cAACC,EAAD,UAAUZ,EAAUa,iBAC1E,eAACH,EAAD,WAAU,cAACC,EAAD,6BAA+B,cAACC,EAAD,UAAU/C,EAAUiD,mBAC7D,eAACJ,EAAD,WAAU,cAACC,EAAD,yBAA2B,cAACC,EAAD,UAAUT,OAC/C,eAACO,EAAD,WAAU,cAACC,EAAD,4BAA8B,cAACC,EAAD,UAAU/C,EAAUkD,UAAY,MAASlD,EAAUmD,gBAC3F,eAACN,EAAD,WAAU,cAACC,EAAD,6BAA+B,cAACC,EAAD,UAAUL,OACnD,eAACG,EAAD,WAAU,cAACC,EAAD,wBAA0B,cAACC,EAAD,UAAU/C,EAAUoD,aACxD,eAACP,EAAD,WAAU,cAACC,EAAD,kCAAoC,cAACC,EAAD,UAAUpF,KAAK0F,MAA4B,IAAtBrD,EAAUsD,WAAmB,IAAM,SACtG,eAACT,EAAD,WAAU,cAACC,EAAD,8BAAgC,cAACC,EAAD,UAAUX,EAAUmB,qBAAuB,IAAMnB,EAAUoB,iCAOzH,IAAMV,EAASjG,IAAO4G,GAAV,KAMNV,EAAUlG,IAAO4G,GAAV,KAIPZ,EAAWhG,IAAO6G,GAAV,KAGRd,EAAQ/F,IAAO8G,MAAV,KCzCEC,EAAajE,0BAEbkE,EAAc,SAACnH,GAAW,IAAD,EACEmD,mBAASiE,aAAaC,QAAQ,cAAerD,KAAKC,MAAMmD,aAAaC,QAAQ,eAAiB,IADhG,mBAC3BC,EAD2B,KACfC,EADe,KA8BlC,OACI,cAACL,EAAWjC,SAAZ,CAAqBzC,MAAS,CAAC8E,EA5BlB,SAAChE,GACdiE,GAAc,SAAAC,GACV,IAAIC,EAAO,sBAAOD,GAAP,CAAalE,IAExB,OADA8D,aAAaM,QAAQ,aAAc1D,KAAK2D,UAAUF,IAC3CA,MAIO,SAACnE,GACnB,IAAMsE,EAAcN,EAAWpC,QAAO,SAAA2C,GAAC,OAAIA,EAAEvH,SAAWgD,EAAUhD,UAClEiH,EAAcK,GACdR,aAAaM,QAAQ,aAAc1D,KAAK2D,UAAUC,KAGzC,SAACtH,EAAQwH,GAClB,IAEIC,EAFAC,EAAYV,EAAWpC,QAAO,SAAA+C,GAAG,OAAIA,EAAI3H,SAAWA,KAAQ,GAC5D4H,EAAWZ,EAAWa,QAAQH,GAEQD,EAAtCG,EAAWJ,IAAQR,EAAWc,OAAiB,EAC1CF,EAAWJ,EAAM,EAAYR,EAAWc,OAAS,EAC5CF,EAAWJ,EACzB,IAAIO,EAAYf,EAAWpC,QAAO,SAAA+C,GAAG,OAAIA,EAAI3H,SAAWA,KACxD+H,EAAUC,OAAOP,EAAQ,EAAGC,GAC5BT,EAAcc,GACdjB,aAAaM,QAAQ,aAAc1D,KAAK2D,UAAUU,MAIlD,SACKrI,EAAME,Y,k8CC5BnB,SAASqI,EAAavI,GAAQ,IAAD,EACqBwF,qBAAW0B,GADhC,mBAClBI,EADkB,KACNkB,EADM,KACIC,EADJ,KAIzB,OACI,gCAA6B,IAAtBnB,EAAWc,OAA4E,IAA7Dd,EAAWpC,QAAO,SAAA2C,GAAC,OAAIA,EAAEvH,SAAWN,EAAMM,UAAQ8H,OAC7E,cAACM,EAAD,CAAWC,QAAS,kBAAIH,EAASxI,EAAM4I,YAAvC,oBACA,cAACC,EAAD,CAAaF,QAAS,kBAAIF,EAAczI,EAAM4I,YAA9C,sBACF,cAACE,EAAD,UAAa,cAACC,EAAD,CAAYC,GAAIC,UAAmBjJ,EAAMM,OAAzC,wBAIlB,SAAS4I,EAAYlJ,GAExB,IAAMsD,EAAYtD,EAAMO,KAClB4I,EAAe3D,qBAAWxC,GAAkB,GAC5CuC,EAAUC,qBAAWxC,GAAkB,GACvCqC,EAAc8D,EAAa7F,EAAUhD,QACrCmF,EAAYF,EAAQjC,EAAUhD,QAEpC,OACI,cAACP,EAAD,UACI,eAACqJ,EAAD,WACK/D,GACD,eAACgE,EAAD,WAAShE,EAAT,IAAuB,KAAO/B,EAAUhD,OAAS,OACjD,cAACiI,EAAD,CAAcK,UAAWtF,EAAWhD,OAAQgD,EAAUhD,SACrDmF,GAAa,qCACd,cAAC6D,EAAD,UAAW7D,EAAUa,cACrB,cAACgD,EAAD,UACA,eAACC,EAAD,CAAWC,GAAI/D,EAAUgE,QAAU,EAAnC,WACMhE,EAAUgE,QAAU,EAAI,IAAM,IAAMxI,KAAK0F,MAAyB,IAAnBlB,EAAUgE,QAAc,IAAM,IAC9ExI,KAAK0F,MAAgC,IAA1BlB,EAAUiE,eAAuB,IAAM,SALzC,YAc9B,IAAMN,EAAejJ,IAAOC,IAAV,KAKZiJ,EAASlJ,IAAOC,IAAV,KAMNkJ,EAAWnJ,IAAOC,IAAV,KAMRmJ,EAAYpJ,IAAOC,IAAV,KAMT,mBAAiB,IAAjB,EAAEoJ,IAAwBG,YAAhB,QAMVjB,EAAYvI,IAAOyJ,OAAV,KAQTf,EAAc1I,IAAOyJ,OAAV,KAQXd,EAAc3I,IAAOyJ,OAAV,KASXb,EAAa5I,YAAO0J,IAAP1J,CAAH,K,iiCCnGD,SAAS2J,GAAS9J,GAC7B,OACI,cAAC,IAAM+J,SAAP,UACI,eAACC,GAAD,CAAaC,UAAW,cAAxB,UACI,cAACC,GAAD,UACI,qBAAKC,IAAKnK,EAAMM,OAAQ8J,IAAKpK,EAAMqK,KAAKC,MAAOC,MAAM,WAEzD,eAACC,GAAD,CAAaP,UAAU,cAAvB,UACI,cAACQ,GAAD,CAAOC,KAAM1K,EAAMqK,KAAKM,IAAxB,SAA8B3K,EAAMqK,KAAKO,WACzC,eAACC,GAAD,WACI,sCAAS7K,EAAMqK,KAAKS,UACpB,8BAAM,IAAIlK,KAAKZ,EAAMqK,KAAKU,UAAUC,sBAExC,4BAAIhL,EAAMqK,KAAKY,kBASnC,IAAMjB,GAAc7J,IAAOC,IAAV,MAYXoK,GAAcrK,IAAOC,IAAV,MASX8J,GAAiB/J,IAAOC,IAAV,MAQdyK,GAAa1K,IAAOC,IAAV,MAKVqK,GAAQtK,IAAO2C,EAAV,MCxDJ,SAASoI,GAAKlL,GAEjB,OACI,qBAAKmL,MAAOC,GAAZ,SACKpL,EAAMO,KAAKE,KAAI,SAAC4K,EAAGC,GAAJ,OAAU,cAACxB,GAAD,CAAUxJ,OAAQN,EAAMM,OAAkB+J,KAAQgB,GAAXC,QAK7E,IAAMF,GAAe,CACjBG,OAAQ,WACRC,SAAU,SACVC,SAAU,S,qQCXP,SAASC,GAAM1L,GAClB,IAAI2L,EAAS1K,KAAKC,MAAMD,KAAK0K,SAAW3L,EAAM4L,OAAOxD,QAErD,OACI,cAACyD,GAAD,CAAgB5B,UAAU,iBAA1B,SACI,cAAC6B,GAAD,CAAmBnB,IAAG,yCAAoC3K,EAAM4L,OAAOD,GAAQI,aAK3F,IAAMF,GAAiB1L,IAAOC,IAAV,MAMd0L,GAAoB3L,YAAO6L,KAAP7L,CAAH,M,4iCCbhB,SAAS8L,KAAgB,IAAD,EACO9I,mBAAS,GADhB,mBACpB+I,EADoB,KACTC,EADS,KAEpB7L,EAAU8L,cAAV9L,OAeP,OAZA+D,qBAAU,WACNgI,MAHe3I,wDAGIpD,EAAQ,CACnByD,QAAS,CACL,eAAgB,oCAGvBS,MAAK,SAAA8H,GAAI,OAAIA,EAAKC,UAClB/H,MAAK,SAAAjE,GAAI,OAAI4L,EAAa5L,MAC1BiM,OAAM,SAAAnK,GAAC,OAAIoK,QAAQC,IAAIrK,QAC7B,CAAC/B,IAIA,cAACqM,GAAD,CAAmB1C,UAAU,oBAA7B,SACmB,IAAdiC,EACG,eAAC,IAAMnC,SAAP,WACI,eAAC6C,GAAD,WACI,cAACC,GAAD,UACI,cAAC3D,EAAD,CAAa3I,KAAM2L,MAEvB,cAACY,GAAD,UAAS,cAACxH,EAAD,CAAW/E,KAAM2L,MAC1B,cAACa,GAAD,UACI,cAAC1M,EAAD,CAAOC,OAAQA,EAAQE,UAAW0L,EAAUc,mBAGpD,cAACtB,GAAD,CAAOE,OAAQM,EAAUe,gBACzB,cAAC/B,GAAD,CAAM5K,OAAQA,EAAQC,KAAM2L,EAAUgB,cAExC,cAAC,IAAMnD,SAAP,wBAMlB,IAAM4C,GAAoBxM,IAAOC,IAAV,MAKjBwM,GAAWzM,IAAOC,IAAV,MAWRyM,GAAY1M,IAAOC,IAAV,MAWT0M,GAAU3M,IAAOC,IAAV,MASP2M,GAAW5M,IAAOC,IAAV,M,i1BC9EC,SAAS+M,GAASnN,GAC7B,IAAMoN,EAAapN,EAAMM,OAGnBiB,EAAQ,CACV8L,MAAQD,GAAcA,EAAW1D,eAAiB,EAAK,QAAU,OAGrE,OACI,cAAC,IAAMK,SAAP,UACI,eAACuD,GAAD,WACI,cAACC,GAAD,CAAavE,GATNtF,UASuB0J,EAAW9M,OAAzC,SAAmD8M,EAAW9M,SAC9D,8BAAM8M,EAAW9G,cACjB,qBAAK6E,MAAO5J,EAAZ,SAAoBN,KAAK0F,MAAiC,IAA3ByG,EAAW1D,eAAuB,IAAM,MACvE,cAAC8D,GAAD,CAAKvD,UAAU,MAAf,SAAsBmD,EAAW/H,mBAMjD,IAAMmI,GAAMrN,IAAOsN,KAAV,MAiBHH,GAAUnN,IAAOC,IAAV,KAKCoN,IAORD,GAAcpN,YAAO0J,IAAP1J,CAAH,M,wdC/CV,SAASuN,GAAS1N,GACrB,IAAMsD,EAAYkC,qBAAWxC,GAAkB,GAE/C,OACI,cAAC2K,GAAD,UACKrK,GACD,cAACsK,GAAD,UACI,cAACC,GAAD,UACKvK,EAAU7C,KAAI,SAAA0E,GAAC,OAAI,cAACgI,GAAD,CAAqC7M,OAAQ6E,GAA9B7B,EAAU6E,QAAQhD,aAQzE,IAAMwI,GAAgBxN,IAAOC,IAAV,MAQbwN,GAASzN,IAAOC,IAAV,MAKNyN,GAAO1N,IAAOC,IAAV,M,UCjCG0N,I,OAAc7K,2BAEd8K,GAAe,SAAC/N,GAAW,IAAD,EACHmD,mBAAS,CACrC6K,UAAU,EACVC,cAAUC,IAHqB,mBAC5BC,EAD4B,KAClBC,EADkB,KAenC,OATA/J,qBAAU,WACFgK,SAASC,SACKD,SAASC,OAAOC,MAAM,MAAMC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,WAAW,oBAAkBH,MAAM,KAAK,IAE9FH,EAAY,CAACJ,UAAU,EAAMC,cAAUC,OAGhD,IAGC,cAACJ,GAAY7I,SAAb,CAAsBzC,MAAO,CAAC2L,EAAUC,GAAxC,SACKpO,EAAME,Y,k4BCdJ,SAASyO,GAAS3O,GAAQ,IAAD,EACJwF,qBAAWsI,IADP,mBAC7BK,EAD6B,KACnBC,EADmB,KAG9BQ,EAAQ,WACa,WAAnB5O,EAAM6O,UAAuB7O,EAAM8O,aAYrCC,EAAe,SAACC,GAClBX,SAASC,OAAT,UAAqBU,EAArB,gDAGJ,OACI,eAAC,IAAMjF,SAAP,WACI,cAAC,GAAD,CAAYpB,QAASiG,EAAO5F,GAAItF,IAAhC,kBACA,cAAC,GAAD,CAAYiF,QAASiG,EAAO5F,GAAItF,cAAhC,wBACCyK,EAASH,SACN,eAAC,WAAD,WACI,cAAC,GAAD,CAAYrF,QAASiG,EAAO5F,GAAItF,SAAhC,mBACA,cAAC,GAAD,CAAYiF,QAASiG,EAAO5F,GAAItF,aAAhC,uBACA,cAAC,GAAD,CAAYsF,GAAItF,IAAiCiF,QArB5C,WACjByF,EAAY,CACRJ,UAAU,EACViB,cAAUf,IAEda,EAAa,gBACbH,KAeY,uBAEJ,eAAC,WAAD,WACI,cAAC,GAAD,CAAYjG,QAASiG,EAAO5F,GAAItF,YAAhC,sBACA,cAAC,GAAD,CAAYiF,QAASiG,EAAO5F,GAAItF,SAAhC,sBAGR,cAAC,GAAD,CAAYiF,QAASiG,EAAO5F,GAAItF,SAAhC,sBAKZ,IAAMqF,GAAa5I,YAAO0J,IAAP1J,CAAH,M,8ZCxCT,SAAS+O,GAAOlP,GAAQ,IAAD,ECLf,WAA0B,IAAD,EACZmD,mBAAS,CAAC,EAAG,IADD,mBAC7BgM,EAD6B,KACvBC,EADuB,KAUpC,OARAC,2BAAgB,WACZ,SAASC,IACTF,EAAQ,CAACG,OAAOC,WAAYD,OAAOE,cAInC,OAFAF,OAAOG,iBAAiB,SAAUJ,GAClCA,IACO,kBAAMC,OAAOI,oBAAoB,SAAUL,MACnD,IACIH,EDJiBS,GADE,mBACnBrF,EADmB,aAEEpH,oBAAS,IAFX,mBAEnB0M,EAFmB,KAEXC,EAFW,KAO1B,OACI,cAACC,GAAD,UACKxF,EAAQ,IACT,cAACyF,GAAD,CAAQ/F,UAAU,SAAlB,SAA2B,cAAC0E,GAAD,CAAUE,SAAS,UAC7C,cAAC,SAAD,CAAMoB,cAAe,SAAAC,GAAK,OANT,SAACA,GAAYJ,EAAUI,EAAML,QAMhBM,CAAkBD,IACjDL,OAAQA,EACR5F,UAAU,SAFT,SAGG,cAAC0E,GAAD,CAAUE,SAAS,SAASC,UAVtB,kBAAMgB,GAAU,UAkBtC,IAAMC,GAAY5P,IAAOC,IAAV,MAOT4P,GAAS7P,IAAOC,IAAV,MEpCG,OAA0B,sD,q+DCMlC,SAASgQ,KACZ,IAAMC,EAAa7K,qBAAWxC,GAAkB,GADxB,EAEMG,mBAAS,IAFf,mBAEjBmN,EAFiB,KAERC,EAFQ,KAIlBC,EAAa,SAACxQ,GAAD,OACf,cAAC,GAAD,CAAUgJ,GAAE,iBAAYhJ,EAAMM,QAA9B,SAA4DN,EAAMM,QAArBN,EAAMM,SAYvD,OACI,cAACmQ,GAAD,UACI,eAACC,GAAD,WACI,eAACC,GAAD,WACI,cAACC,GAAD,CAAanO,KAAK,OAAOoO,YAAY,mCAAmCC,SAAU,SAACzO,GAAD,OAb3E,SAAC0O,GACpB,IAAMC,EAAaD,EAAME,OAAOzO,MAAM0O,cAKtCX,EAJKS,EAIMX,EAAWnL,QAAO,SAAAiM,GAAI,OAAIA,EAAKD,cAAcE,SAASJ,MAAaK,MAAM,EAAG,IAHxE,IAUsFC,CAAejP,MACxG,cAACkP,GAAD,CAAc9O,KAAK,SAAnB,SACA,mBAAGwH,UAAU,sBAGjB,cAACuH,GAAD,UACI,cAACC,GAAD,UACKnB,GAAWA,EAAQ7P,KAAI,SAAAH,GAAM,OAAI,cAACkQ,EAAD,CAAyBlQ,OAAQA,GAAhBA,eAQ3E,IAAMoQ,GAAavQ,IAAOC,IAAV,MAcVuQ,GAAYxQ,IAAOC,IAAV,MAUTwQ,GAAczQ,IAAOuR,MAAV,MAgBXH,GAAepR,IAAOyJ,OAAV,MAYZ4H,GAAcrR,IAAOC,IAAV,MAQVqR,GAAetR,IAAOC,IAAV,MAOb+M,GAAWhN,YAAO0J,IAAP1J,CAAH,MAWRsQ,GAAatQ,IAAOC,IAAV,KAEYuR,I,6kECpHb,SAASC,GAAQ5R,GAAQ,IAAD,EACiBwF,qBAAW0B,GAD5B,mBAC5BI,EAD4B,KACNmB,GADM,WACSoJ,EADT,KAG7BpM,GAAYF,EADFC,qBAAWxC,GAAkB,IACnBhD,EAAMO,KAAKD,QAC/BkJ,IAAK/D,GAAYA,EAAUgE,QAAU,EAI3C,OACI,cAAC,IAAMM,SAAP,UAAiBzC,EAAWc,OAAS,GACjC,eAAC0J,GAAD,WACI,eAACC,GAAD,WACI,wBAAQpJ,QAAS,kBAAMkJ,EAAK7R,EAAMO,KAAKD,QAAS,IAAhD,SAAoD,mBAAG2J,UAAU,qBACjE,wBAAQtB,QAAS,kBAAMkJ,EAAK7R,EAAMO,KAAKD,OAAQ,IAA/C,SAAmD,mBAAG2J,UAAU,0BAEpE,eAAC+H,GAAD,WACI,gCACI,cAAC,GAAD,CAAQhJ,GAXTtF,UAW0B1D,EAAMO,KAAKD,OAApC,SAA6CN,EAAMO,KAAKD,SACvDkJ,EAAI,cAACyI,GAAD,CAAMzI,GAAIA,EAAIS,UAAU,yBAAiC,cAACgI,GAAD,CAAMzI,GAAIA,EAAIS,UAAU,2BACtF,cAAC,GAAD,CAAatB,QAAS,kBAAIF,EAAczI,EAAMO,OAA9C,sBACA,cAAC,GAAD,UAAa,cAAC,GAAD,CAAYyI,GAAIC,UAAmBjJ,EAAMO,KAAKD,OAA9C,wBAEfmF,GACF,eAACyM,GAAD,WACI,eAACC,GAAD,WACI,6CACA,4BAAI1M,EAAUa,iBAElB,eAAC6L,GAAD,WACI,2CACA,4BAAIlR,KAAK0F,MAAgC,IAA1BlB,EAAUiE,eAAuB,IAAM,SAE1D,eAACyI,GAAD,WACI,+CACA,4BAAInS,EAAMO,KAAKgG,mBAEnB,eAAC4L,GAAD,WACI,+CACA,4BAAInS,EAAMO,KAAK0F,oBAEnB,eAACkM,GAAD,WACI,2CACA,4BAAInS,EAAMO,KAAKqF,0BAW3C,IAAMkM,GAAM3R,IAAOC,IAAV,MAaH2R,GAAgB5R,IAAOC,IAAV,MAQb4R,GAAU7R,IAAOC,IAAV,MAKPiJ,GAASlJ,YAAO0J,IAAP1J,CAAH,MAQN8R,GAAO9R,IAAOmL,EAAV,MACG,SAAAtL,GAAK,OAAIA,EAAMwJ,GAAI,QAAU,aAGpCX,GAAc1I,IAAOyJ,OAAV,MAUXd,GAAc3I,IAAOyJ,OAAV,MAUXb,GAAa5I,YAAO0J,IAAP1J,CAAH,MASVgS,GAAOhS,IAAOC,IAAV,MAaJ8R,GAAU/R,IAAOC,IAAV,MCrIN,SAASgS,KAAc,IAAD,EACF5M,qBAAW0B,GAA1BI,EADiB,oBAEzB,OACI,qBAAK6D,MAAOkH,GAAZ,SAC2B,IAAtB/K,EAAWc,OACZ,mBAAG+C,MAAQmH,GAAX,kDACChL,EAAW7G,KAAI,SAAAoH,GAAC,OAAI,cAAC+J,GAAD,CAASrR,KAAMsH,GAAQA,EAAEvH,aAK1D,IAAM+R,GAAc,CAChB7G,SAAU,SACVD,OAAQ,YAGN+G,GAAe,CACjB/G,OAAQ,WACRgH,UAAU,UCfDC,GAAS,CAClBC,MATe,CACfpF,MAAO,SASPqF,KANc,CACdrF,MAAO,S,2TCKI,SAASsF,GAAU3S,GAAQ,IACjCM,EAA2GN,EAA3GM,OAAQ+P,EAAmGrQ,EAAnGqQ,WAAYuC,EAAuF5S,EAAvF4S,WAAYC,EAA2E7S,EAA3E6S,MAAOC,EAAoE9S,EAApE8S,UAAWC,EAAyD/S,EAAzD+S,aAAcC,EAA2ChT,EAA3CgT,aAAcC,EAA6BjT,EAA7BiT,aAAcC,EAAelT,EAAfkT,YAD5D,EAEXC,IAAMhQ,SAAS7C,GAFJ,mBAE9BkC,EAF8B,KAEvB4Q,EAFuB,KAIrC,OACI,eAACC,GAAD,CAAYC,aAAa,MAAzB,UACI,cAACC,GAAA,EAAD,CACAtJ,UAAU,OACV5I,QAASgP,EACT7N,MAAOA,EACPsO,SAAU,SAACC,EAAOyC,GACdJ,EAASI,GACTP,EAAaO,IAGjBC,YAAa,SAACC,GAAD,OACT,cAACC,GAAA,EAAD,6BACID,GADJ,IAEAE,MAAM,SACN5E,KAAK,eAIT,eAAC6E,GAAA,EAAD,CAAa5J,UAAU,OAAvB,UACI,cAAC6J,GAAA,EAAD,qBACA,eAACC,GAAA,EAAD,CAAQH,MAAM,SAAS5E,KAAK,YAAYxM,MAAOsQ,EAAWhC,SAAYiC,EAAtE,UACI,cAACiB,GAAA,EAAD,CAAUxR,MAAM,IAAhB,eACA,cAACwR,GAAA,EAAD,CAAUxR,MAAM,MAAhB,iBACA,cAACwR,GAAA,EAAD,CAAUxR,MAAM,OAAhB,wBAGR,cAACmR,GAAA,EAAD,CACI1J,UAAU,OACV2J,MAAM,cACN5E,KAAK,QACLvM,KAAK,SACLD,MAAOqQ,EACP/B,SAAUiC,EACVkB,WAAY,CAAEC,WAAY,CAAE/S,IAAK,EAAGgT,KAAM,MAE9C,cAACR,GAAA,EAAD,CACI1J,UAAU,OACV2J,MAAM,cACN5E,KAAK,QACLvM,KAAK,SACLD,MAAOoQ,EACP9B,SAAUiC,EACVkB,WAAY,CAAEC,WAAY,CAAE/S,IAAK,IAAMgT,KAAM,QACjD,cAACC,GAAA,EAAD,CAAQC,SAAUnB,EAAavK,QAASqK,EAAc3F,MAAM,UAAUiH,QAAQ,YAA9E,uBAOZ,IAAMjB,GAAalT,IAAOoU,KAAV,M,kDC1DD,SAASC,GAAcxU,GAAQ,IACpCyU,EAAoFzU,EAApFyU,aAAczB,EAAsEhT,EAAtEgT,aAAc0B,EAAwD1U,EAAxD0U,cAAepU,EAAyCN,EAAzCM,OAAQwS,EAAiC9S,EAAjC8S,UAAWD,EAAsB7S,EAAtB6S,MAAOD,EAAe5S,EAAf4S,WAG3E,OACI,8BACI,eAAC+B,GAAA,EAAD,CAAQC,KAAMF,EAAeG,QAASJ,EAAtC,UACI,cAACK,GAAA,EAAD,CAAaC,GAAG,qBAAhB,SAAsC,8CACtC,cAACC,GAAA,EAAD,UACI,eAACC,GAAA,EAAD,CAAmBF,GAAG,2BAAtB,UACI,4CAAezU,KAAc,uBAC7B,4CAAewS,KAAiB,uBAChC,4CAAeD,KAAa,uBAC5B,iDAAoBD,EAApB,UAA0C,4BAGlD,eAACsC,GAAA,EAAD,WACI,cAACd,GAAA,EAAD,CAAQzL,QAAS8L,EAAcpH,MAAM,UAArC,sBACA,cAAC+G,GAAA,EAAD,CAAQzL,QAASqK,EAAc3F,MAAM,UAAU8H,WAAS,EAAxD,2B,6hBChBL,SAASC,GAAMpV,GAC1B,IAAMqQ,EAAa7K,qBAAWxC,GAAkB,GAC1CoL,EAAc5I,qBAAWsI,IAAa,GAFX,EAGJ3K,mBAASnD,EAAMqV,MAAM3B,OAAOpT,OAASN,EAAMqV,MAAM3B,OAAOpT,OAAS+P,EAAW,IAHxE,mBAG1B/P,EAH0B,KAGjBgV,EAHiB,OAIGnS,mBAAS,GAJZ,mBAI1ByP,EAJ0B,KAId2C,EAJc,OAKCpS,mBAAS,KALV,mBAK1B2P,EAL0B,KAKf0C,EALe,OAMPrS,mBAAS,GANF,mBAM1B0P,EAN0B,KAMnB4C,EANmB,OAODtS,oBAAS,GAPR,mBAO1BuS,EAP0B,KAOhBC,EAPgB,OAQTxS,oBAAS,GARA,mBAQ1ByR,EAR0B,KAQpBgB,EARoB,OASPzS,mBAAS,IATF,mBAS1B0S,EAT0B,KASnBC,EATmB,OAUO3S,oBAAS,GAVhB,mBAU1BuR,EAV0B,KAUXqB,EAVW,OAWK5S,oBAAS,GAXd,mBAW1B+P,EAX0B,KAWb8C,EAXa,KAmB3BvB,EAAe,kBAAMsB,GAAe,IAI1C1R,qBAAU,WAFa2R,GAAgB3F,EAAWe,SAAS9Q,IAAWuS,GAAQ,GAAKD,GAAc,GAAiB,MAAZE,KAInG,CAACxS,EAAQsS,EAAYE,EAAWD,IAEnC,IA+CMoD,EAAwB,SAAC1V,GAC3B,IAAI2V,EAAM,wBACV,OAAQ3V,GACJ,IAAK,uBACD2V,GAAO,iDACP,MACJ,IAAK,oBACDA,GAAO,gDACP,MACJ,IAAK,qBACDA,GAAO,oDACP,MACJ,IAAK,mBACDA,GAAO,8DACP,MACJ,QACIA,GAAO,+BAEfJ,EAASI,IAGPC,EAAmB,SAACC,GACtB,GAAKA,EAASC,GAYV,OAAOD,EAHP,MARwB,MAApBA,EAASE,QACTX,GAAY,GACZvH,EAAY,CAAEJ,UAAW,EAAOC,cAAWC,KAChB,MAApBkI,EAASE,QAChBF,EAAS7J,OACJ/H,MAAK,SAAA+R,GAAG,OAAIC,EAAUV,EAAUS,EAAI1S,YACpC2I,OAAM,SAAAnK,GAAC,OAAImU,EAAUV,EAAU,yDAElCW,MAAML,EAASM,aAOvBF,EAAY,SAACG,EAAMpW,GACrBkU,IACAkC,EAAKpW,GAlGeqV,GAAQ,IAsGhC,OACI,eAACgB,GAAD,YACkB,IAAblB,EACC,cAAC,IAAD,CAAU1M,GA3GGtF,eA4Gb,eAAC,IAAMqG,SAAP,WACE,cAAC8M,GAAD,6BACA,cAAClE,GAAD,CAAWrS,OAAQA,EAAQ+P,WAAYA,EAAYuC,WAAYA,EAAYC,MAAOA,EAAOC,UAAWA,EACnGI,YAAaA,EAAaD,aAzGlB,SAAC3S,GAAD,OAAYgV,EAAUhV,IAyGwByS,aApE9C,SAAC1Q,GAClB,IAAM9B,EAAO8B,EAAE4O,OAAOzO,MACtB,OAAQH,EAAE4O,OAAOjC,MACb,IAAK,QACDuG,EAAchV,GACd,MACJ,IAAK,YACDiV,EAAajV,GACb,MACJ,IAAK,QACDkV,EAASlV,KA0D0EyS,aA3G3E,kBAAM+C,GAAe,SA8GjC,cAACe,GAAA,EAAD,CAAOlC,KAAMA,EAAMC,QA/GR,kBAAMe,GAAQ,IA+GzB,SAAwC,cAACmB,GAAD,UAAelB,MACvD,cAACrB,GAAD,CACIC,aAAcA,EACdzB,aAxGS,WACjB,IAAM9O,EAAO,CACT5D,OAAQA,EACRsS,WAAYA,EACZE,UAAWA,EACXwD,OAAQ,UACRzD,MAAOA,GAGX,GAAKxE,SAASC,OAAd,CACA,IAAM0I,EAAQ3I,SAASC,OAAOC,MAAM,MAAMC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,WAAW,oBAAkBH,MAAM,KAAK,GAElGlC,MA1Be3I,uDA0BG,CACduT,OAAQ,OACR/S,KAAMF,KAAK2D,UAAUzD,GACrBH,QAAS,CACL,cAAiB,UAAYiT,EAC7B,eAAgB,oCAGvBxS,KAAK2R,GACL3R,MAAK,SAAA8H,GAAI,OAAIA,EAAKC,UAClB/H,MAAK,SAAAjE,GACW,cAATA,EAAsBoV,GAAY,GACjCa,EAAUP,EAAuB1V,MAEzCiM,OAAM,SAAAnK,GAAC,OAAIoK,QAAQC,IAAIrK,QA+EhBqS,cAAeA,EACfpU,OAAQA,EACRwS,UAAWA,EACXD,MAAOA,EACPD,WAAYA,OAM5B,IAAMgE,GAAWzW,IAAOC,IAAV,MAQR2W,GAAe5W,IAAOC,IAAV,MASZyW,GAAW1W,IAAO+W,GAAV,M,yHCtKC,SAASC,GAAT,GAAqC,IAAfC,EAAc,EAAdA,YACjC,OACI,cAAC,IAAMrN,SAAP,UACI,+BACI,cAACsN,GAAD,UAAWD,EAAYE,gBAAgBjG,MAAM,EAAG+F,EAAYE,gBAAgBnP,QAAQ,MAAMoP,QAAQ,IAAK,OACvG,cAACF,GAAD,UAAWD,EAAYI,YAAc,EAAI,OAAQ,QACjD,cAACH,GAAD,UAAWpW,KAAKwW,IAAIL,EAAYI,eAChC,cAACH,GAAD,UAAWD,EAAYM,aACvB,cAACL,GAAD,WAA6E,GAAhED,EAAYM,WAAaN,EAAYI,aAAaG,QAAQ,KACvE,cAACN,GAAD,UAAWD,EAAYQ,kBACvB,cAACP,GAAD,UAAWD,EAAYS,oBAOvC,IAAMR,GAAWlX,IAAO4G,GAAV,M,kpCCfC+Q,eAAU3E,IAAM4E,YAAW,SAAC/X,EAAOgY,GAAR,OACtC,eAAC,GAAD,WACI,eAAC,GAAD,6CAAsC,cAAC,GAAD,CAAQhP,GAAItF,UAAmC1D,EAAMM,OAArD,SAA8DN,EAAMM,YAC1G,eAAC2X,GAAD,WACI,cAACC,GAAD,UACI,+BACA,cAACC,GAAD,mBACA,cAACA,GAAD,qBACA,cAACA,GAAD,qBACA,cAACA,GAAD,0BACA,eAACA,GAAD,8BAA6BnY,EAAMoY,SAAnC,OACA,cAACD,GAAD,gCACA,eAACA,GAAD,6BAA4BnY,EAAMoY,SAAlC,YAGJ,gCACKpY,EAAMqY,cAAgBrY,EAAMqY,aAAaxV,KAAKyV,IAAS7X,KAAI,SAAA8X,GAAC,OAAI,cAACpB,GAAD,CAAwBC,YAAamB,GAAnBA,EAAExD,kBAM/FuD,GAAU,SAACxV,EAAGC,GAAJ,OAAUnC,KAAKqD,MAAMnB,EAAEwU,iBAAmB1W,KAAKqD,MAAMlB,EAAEuU,kBAAoB,EAAI,GAEzFP,GAAe5W,IAAOC,IAAV,MAYZ8X,GAAS/X,IAAOqY,MAAV,MAMNP,GAAe9X,IAAO8G,MAAV,MAWZwD,GAAQtK,IAAOC,IAAV,MAML+X,GAAahY,IAAOsY,GAAV,MAQVpP,GAASlJ,YAAO0J,IAAP1J,CAAH,M,slDChEG,SAASuY,GAAc1Y,GAClC,IAAM2Y,EAAYjV,UAAyC1D,EAAMmR,KAAK7Q,OAGhEmF,GAAYF,EADFC,qBAAWxC,GAAkB,IACnBhD,EAAMmR,KAAK7Q,QAJI,EAKjB6C,oBAAS,GALQ,mBAKlCyR,EALkC,KAK5BgB,EAL4B,KAQnCgD,EAASzF,IAAM0F,SAAQ,WACzB,IAAMC,EAAQ9Y,EAAMqY,aAAa5X,KAAI,SAAAsY,GAAC,OAAInY,KAAKqD,MAAM8U,EAAEzB,oBACvD,OAAO,IAAI1W,KAAKkY,EAAME,QAAO,SAAClW,EAAGC,GAAJ,OAAU9B,KAAKgY,IAAInW,EAAGC,OAAKmW,gBACzD,CAAClZ,EAAMqY,eACJL,EAAMmB,sBAEZ,OACI,cAAC,GAAD,UACI,eAAC,GAAD,WACI,gCACI,cAAC,GAAD,CAAQnQ,GAhBLtF,UAgBsB1D,EAAMmR,KAAK7Q,OAApC,SAA6CN,EAAMmR,KAAK7Q,SACxD,cAAC8Y,GAAD,UAAiB,cAAC,GAAD,CAAYpQ,GAAI2P,EAAhB,qBACjB,cAACS,GAAD,CAAiBzQ,QAdd,kBAAMiN,GAAQ,IAcjB,wBAEJ,eAAC,GAAD,WACI,eAAC,GAAD,WACI,iDACCgD,GAAUA,EAAOrB,QAAQ,IAAK,KAAK8B,UAAU,EAAGT,EAAOzQ,QAAQ,SAEpE,eAAC,GAAD,WACI,4CACA,4BAAInI,EAAMmR,KAAKmI,YAEnB,eAAC,GAAD,WACI,4CACA,6BAAKtZ,EAAMmR,KAAKmI,OAAS7T,EAAUa,aAAaqR,QAAQ,QAE5D,eAAC,GAAD,WACI,6CACA,4BAAIlS,EAAUa,oBAGtB,cAACwQ,GAAA,EAAD,CAAOlC,KAAMA,EAAMC,QAjCX,kBAAMe,GAAQ,IAiCtB,SACI,cAAC,GAAD,CAASoC,IAAKA,EAAKK,aAAcrY,EAAMqY,aAAcD,SAAUpY,EAAMoY,SAAU9X,OAAQN,EAAMmR,KAAK7Q,gBAOtH,IAAMwR,GAAM3R,IAAOC,IAAV,MAaH4R,GAAU7R,IAAOC,IAAV,MAKPiJ,GAASlJ,YAAO0J,IAAP1J,CAAH,MAQNiZ,GAAkBjZ,IAAOyJ,OAAV,MAUfuI,GAAOhS,IAAOC,IAAV,MAcJ8R,GAAU/R,IAAOC,IAAV,MAUP2I,GAAa5I,YAAO0J,IAAP1J,CAAH,M,kkBChHD,SAASmN,GAAQtN,GAE5B,IAAMsD,EAAYkC,qBAAWxC,GAAkB,GACzCuW,EAAiBvZ,EAAMwZ,KAAKC,QAAQC,QACtCC,EAAa,EAWjB,OAJyB,IAArBrW,EAAU8E,SACVuR,EAAa3Z,EAAMwZ,KAAKI,UAAUnZ,KAAI,SAAA0Q,GAAI,OAAIA,EAAKmI,OANjC,SAAChZ,GAAY,IAAD,EACdgD,EAAU4B,QAAO,SAAAC,GAAC,OAAIA,EAAE7E,SAAWA,KACnD,OAF8B,oBAEjBgG,YAI+CuT,CAAc1I,EAAK7Q,WAAS0Y,QAAO,SAAClW,EAAEC,GAAH,OAASD,EAAIC,IAAG,IAI/G,cAAC,GAAD,UACI,kCACI,eAAC,GAAD,WAAU,cAAC,GAAD,qBAAuB,eAAC,GAAD,WAAU/C,EAAMwZ,KAAKM,UAArB,IAAiC9Z,EAAMwZ,KAAKO,eAC7E,eAAC,GAAD,WAAU,cAAC,GAAD,wBAA0B,eAAC,GAAD,WAAUR,EAAe5B,QAAQ,GAAjC,IAAsC3X,EAAMwZ,KAAKC,QAAQrB,eAC7F,eAAC,GAAD,WAAU,cAAC,GAAD,sBAAwB,eAAC,GAAD,WAAUuB,EAAWhC,QAAQ,GAA7B,aAClC,eAAC,GAAD,WAAU,cAAC,GAAD,4BAA8B,eAAC,GAAD,YAAWgC,EAAaJ,GAAgB5B,QAAQ,GAAhD,kBAOxD,IAAMvR,GAASjG,IAAO4G,GAAV,MAMNV,GAAUlG,IAAO4G,GAAV,MAMPZ,GAAWhG,IAAO6G,GAAV,MAGRd,GAAQ/F,IAAO8G,MAAV,M,iMCvCI,SAAS+S,KAAa,IAAD,EACAxU,qBAAWsI,IADX,mBACzBK,EADyB,KACfC,EADe,OAEAjL,oBAAS,GAFT,mBAEzBuS,EAFyB,KAEfC,EAFe,OAGRxS,mBAAS,GAHD,mBAGzBqW,EAHyB,KAGnBS,EAHmB,OAIN9W,mBAAS,IAJH,mBAIzB+W,EAJyB,KAIlBC,EAJkB,OAKAhX,mBAAS,IALT,mBAKzBiX,EALyB,KAKfC,EALe,KAUhChW,qBAAU,WACN,GAAIgK,SAASC,OAAQ,CACjB,IAAM0I,EAAQ3I,SAASC,OAAOC,MAAM,MAAMC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,WAAW,oBAAkBH,MAAM,KAAK,GAClGlC,MAPU3I,sDAOO,CACTK,QAAS,CACL,cAAiB,UAAYiT,EAC7B,eAAgB,oCAGvBxS,KAAK2R,GACL3R,MAAK,SAAA8H,GAAI,OAAIA,EAAKC,UAClB/H,MAAK,SAAAjE,GACF0Z,EAAQ1Z,GACR4Z,EAAS5Z,EAAKqZ,UAAU1U,QAAO,SAAAoG,GAAC,OAAIA,EAAEgO,OAAS,MAC/Ce,EAAY9Z,EAAKqZ,UAAU1U,QAAO,SAAAoG,GAAC,OAAiB,IAAbA,EAAEgO,cAE5C9M,OAAM,SAAAnK,GAAC,OAAIoK,QAAQC,IAAIrK,SAEjC,IAEH,IAAM8T,EAAmB,SAACC,GACtB,GAAKA,EAASC,GAQV,OAAOD,EAHP,MAJwB,MAApBA,EAASE,SACTX,GAAY,GACZvH,EAAY,CAAEJ,UAAW,EAAOC,cAAWC,KAEzCuI,MAAML,EAASM,aAO7B,OAEI,eAAC,WAAD,WACChB,GAAY,cAAC,IAAD,CAAU1M,GAvCRtF,WAwCdyK,EAASH,UACN,cAACsM,GAAD,UACc,IAATd,EACD,eAAC,IAAMzP,SAAP,WACI,kDACA,cAAC,GAAD,CAASyP,KAAMA,IACdU,EAAM9R,QAAU,EACb,eAAC,IAAM2B,SAAP,WACA,wDACCmQ,EAAMzZ,KAAI,SAAA0E,GAAC,OACR,cAACuT,GAAD,CAEIvH,KAAMhM,EACNiT,SAAUoB,EAAKC,QAAQrB,SACvBC,aAAcmB,EAAKe,gBAAgBrV,QAAO,SAAAsV,GAAC,OAAIA,EAAEla,SAAW6E,EAAE7E,WAHzD6E,EAAE4P,UAKK,cAAC,IAAMhL,SAAP,IACvBqQ,EAAShS,QAAU,EAChB,eAAC,IAAM2B,SAAP,WACI,yDACCqQ,EAAS3Z,KAAI,SAAA0E,GAAC,OACX,cAACuT,GAAD,CAEIvH,KAAMhM,EACNiT,SAAUoB,EAAKC,QAAQrB,SACvBC,aAAcmB,EAAKe,gBAAgBrV,QAAO,SAAAsV,GAAC,OAAIA,EAAEla,SAAW6E,EAAE7E,WAHzD6E,EAAE4P,UAKC,cAAC,IAAMhL,SAAP,OACR,eAOpC,IAAMuQ,GAAena,IAAOC,IAAV,M,qVCnFH,SAASqa,GAAUza,GAC9B,IAAMoO,EAAc5I,qBAAWsI,IAAa,GADP,EAEL3K,oBAAS,GAFJ,mBAE9BuS,EAF8B,KAEpBC,EAFoB,OAGbxS,oBAAS,GAHI,mBAG9ByR,EAH8B,KAGxBgB,EAHwB,OAIPzS,mBAAS,IAJF,mBAI9BU,EAJ8B,KAIrB6W,EAJqB,KAO/BC,EAAaC,mBACbC,EAAgBD,mBARe,EASOzX,oBAAS,GAThB,mBAS9B2X,EAT8B,KASVC,EATU,OAUc5X,oBAAS,GAVvB,mBAU9B6X,EAV8B,KAUPC,EAVO,OAWS9X,oBAAS,GAXlB,mBAW9B+X,EAX8B,KAWbC,EAXa,OAYLhY,oBAAS,GAZJ,mBAY9BiY,EAZ8B,KAYpBC,EAZoB,KAiB/BC,EACW,gCA6BXnF,EAAmB,SAACC,GACtB,GAAKA,EAASC,GASV,OAAOD,EARP,GAAwB,MAApBA,EAASE,OAGT,MAFAoE,EAAWY,GA7CG1F,GAAQ,GA+ChBa,MAAM5S,GAEhB,MAAM4S,MAAML,EAASM,aAOvB6E,EAAe,iBAAM,6BAA6BC,KAAKb,EAAWc,QAAQjZ,QAC1EkZ,EAAkB,kBAA6C,IAAvCb,EAAcY,QAAQjZ,MAAM4F,QACpDuT,EAAa,kBAA6C,IAAvCd,EAAcY,QAAQjZ,MAAM4F,QAAoD,IAApCuS,EAAWc,QAAQjZ,MAAM4F,QAExFwT,EAAgB,WAIlB,OAHAT,GAAmB,GACnBJ,EAAcQ,KACdN,EAAiBS,KACVH,KAAkBG,KAG7B,OACA,eAACG,GAAD,WACKnG,GAAY,cAAC,IAAD,CAAU1M,GA5DJtF,eA6DnB,cAACoT,GAAA,EAAD,CAAOlC,KAAMA,EAAMC,QArEF,kBAAMe,GAAQ,IAqE/B,SAA0C,cAAC,GAAD,UAAe/R,MACzD,eAAC,WAAD,WACA,cAAC8P,GAAA,EAAD,CACIW,QAAQ,WACR/I,OAAO,SACPuQ,UAAQ,EACRC,WAAS,EACTnI,MAAM,gBACNoI,SAAUrB,EACVxF,WAAS,EACT7B,aAAa,MACb7Q,KAAK,QACLoT,OAAQiF,EACRhK,SAAW,WACPuK,EAAYM,KACRT,GAAiBH,EAAcQ,MAEvCU,WAAYnB,EAAqB,GAAK,kBAE1C,cAACnH,GAAA,EAAD,CACIW,QAAQ,WACR/I,OAAO,SACPuQ,UAAQ,EACRC,WAAS,EACTnI,MAAM,WACNnR,KAAK,WACLuZ,SAAUnB,EACVvH,aAAa,MACbuC,OAAQmF,EACRlK,SAAW,WACPuK,EAAYM,KACZV,EAAiBS,MAErBO,WAAYjB,EAAwB,GAAK,8BAG7C,eAAC,WAAD,WACA,cAAC5G,GAAA,EAAD,CACI3R,KAAK,SACLsZ,WAAS,EACTzH,QAAQ,YACRjH,MAAM,YACNgH,SAAU+G,EACVjM,KAAK,QACLxG,QAlGY,WAEhB,GAAKiT,IAAL,CAEA,IAAM1X,EAAO,CACT+K,SAAU0L,EAAWc,QAAQjZ,MAC7B0Z,SAAUrB,EAAcY,QAAQjZ,OAEpC6J,MAhBe3I,uDAgBG,CACVuT,OAAQ,OACR/S,KAAMF,KAAK2D,UAAUzD,GACrBH,QAAS,CAAC,eAAgB,oCAE7BS,KAAK2R,GACL3R,MAAK,SAAA8H,GAAI,OAAIA,EAAKC,UAClB/H,MAAK,SAAA4R,GACFhI,EAAY,CACRJ,UAAU,EACViB,SAAUmH,EAASnH,WAEvBZ,SAASC,OAAT,uBAAkC8H,EAASY,OAC3CrB,GAAY,MAEfnJ,OAAM,SAAA+J,GAAG,OAAI9J,QAAQC,IAAI6J,QAoE9B,mBAWA,cAAC4F,GAAA,EAAD,CACIC,MAAM,SACN/O,MAAM,UACNgP,SAAU,EACVC,KAAK,SAJT,oCAaR,IAAMT,GAAY1b,IAAOC,IAAV,MAKT2W,GAAe5W,IAAOC,IAAV,M,gWC/IH,SAASmc,KAAoB,IAAD,EACqBpZ,oBAAS,GAD9B,mBAChCqZ,EADgC,KACRC,EADQ,OAEftZ,oBAAS,GAFM,mBAEhCyR,EAFgC,KAE1BgB,EAF0B,OAGPzS,oBAAS,GAHF,mBAGhCuS,EAHgC,KAGtBC,EAHsB,OAITxS,mBAAS,IAJA,mBAIhCU,EAJgC,KAIvB6W,EAJuB,KAKjCgC,EAAc,kBAAM9G,GAAQ,IAK5B+G,EAAoB/B,mBACpBgC,EAAmBhC,mBACnBiC,EAAgBjC,mBAChBkC,EAAmBlC,mBACnBmC,EAAyBnC,mBACzBoC,EAAwBpC,mBAfS,EAgBKzX,oBAAS,GAhBd,mBAgBhC2X,EAhBgC,KAgBZC,EAhBY,OAiBa5X,oBAAS,GAjBtB,mBAiBhC8Z,EAjBgC,KAiBRC,EAjBQ,OAkBW/Z,oBAAS,GAlBpB,mBAkBhCga,EAlBgC,KAkBTC,EAlBS,OAmBYja,oBAAS,GAnBrB,mBAmBhC6X,EAnBgC,KAmBTC,EAnBS,OAoBa9X,oBAAS,GApBtB,mBAoBhCka,EApBgC,KAoBZC,EApBY,OAqBOna,oBAAS,GArBhB,mBAqBhC+X,EArBgC,KAqBfC,EArBe,KAuBjCG,EACW,sEADXA,EAEU,0BAiCVnF,EAAmB,SAACC,GACtB,GAAKA,EAASC,GASV,OAAOD,EARP,GAAwB,MAApBA,EAASE,OAGT,MAFAoE,EAAWY,GACXoB,IACMjG,MAAM5S,GAEhB,MAAM4S,MAAML,EAASM,aAOvB6E,GAAe,WACjB,IAAMgC,EAAQV,EAAcpB,QAAQjZ,MACpC,MAAO,6BAA6BgZ,KAAK+B,IAGvCC,GAAe,SAAC9b,GAClB,OAAuB,IAAhBA,EAAK0G,QAGVsT,GAAkB,WACpB,IAAM+B,EAAYX,EAAiBrB,QAAQjZ,MACrCkb,EAAYX,EAAuBtB,QAAQjZ,MACjD,QAAKgb,GAAaC,IAIPA,IAAcC,GAIvBC,GAAgB,WAClB,IAAMC,EAAaJ,GAAab,EAAkBlB,QAAQjZ,OACpDqb,EAAYL,GAAaZ,EAAiBnB,QAAQjZ,OAClDsb,EAAavC,KACbwC,EAAgBrC,KAOtB,OALAwB,EAAkBU,GAClBR,EAAiBS,GACjB9C,EAAc+C,GACd7C,EAAiB8C,GAEVH,GAAcC,GAAaC,GAAcC,GAGpD,OACA,eAAC,GAAD,YACkB,IAAbrI,EAAoB,cAAC,IAAD,CAAU1M,GApGhBtF,WAoGqC,6BACpD,cAACoT,GAAA,EAAD,CAAOlC,KAAMA,EAAMC,QAvGF,kBAAMe,GAAQ,IAuG/B,SAA0C,cAAC,GAAD,UAAe/R,MACzD,eAAC,WAAD,WACA,cAAC8P,GAAA,EAAD,CACIW,QAAQ,WACR/I,OAAO,SACPuQ,UAAQ,EACRC,WAAS,EACTnI,MAAM,aACNuB,WAAS,EACT6G,SAAUW,EACVrJ,aAAa,MACbuC,OAAQoH,EACRnM,SAAW,kBAAKoM,EAAkBM,GAAab,EAAkBlB,QAAQjZ,SACzEyZ,WAAYgB,EAAyB,GAAK,uBAE1C,cAACtJ,GAAA,EAAD,CACAW,QAAQ,WACR/I,OAAO,SACPuQ,UAAQ,EACRC,WAAS,EACTnI,MAAM,YACNuB,WAAS,EACT6G,SAAUY,EACVtJ,aAAa,MACbuC,OAAQsH,EACRrM,SAAW,kBAAKsM,EAAiBI,GAAaZ,EAAiBnB,QAAQjZ,SACvEyZ,WAAYkB,EAAwB,GAAK,sBAE7C,cAACxJ,GAAA,EAAD,CACIW,QAAQ,WACR/I,OAAO,SACPuQ,UAAQ,EACRC,WAAS,EACTnI,MAAM,gBACNuB,WAAS,EACT6G,SAAUa,EACVvJ,aAAa,MACb7Q,KAAK,QACLoT,OAAQiF,EACRhK,SAAW,WAAWoK,GAAiBH,EAAcQ,OACrDU,WAAYnB,EAAqB,GAAK,kBAE1C,cAACnH,GAAA,EAAD,CACIW,QAAQ,WACR/I,OAAO,SACPuQ,UAAQ,EACRC,WAAS,EACTnI,MAAM,WACNnR,KAAK,WACLuZ,SAAUc,EACVxJ,aAAa,MACbuC,OAAQmF,EACRlK,SAAW,WAAWuM,GAAoBpC,EAAiBS,OAC3DO,WAAYjB,EAAwB,GAAK,2BAE7C,cAACrH,GAAA,EAAD,CACIW,QAAQ,WACR/I,OAAO,SACPuQ,UAAQ,EACRC,WAAS,EACTnI,MAAM,kBACNnR,KAAK,WACLuZ,SAAUe,EACVzJ,aAAa,MACbuC,OAAQmF,EACRlK,SAAW,WAAUuM,GAAoBpC,EAAiBS,OAC1DO,WAAYjB,EAAwB,GAAK,2BAE7C,cAACgD,GAAA,EAAD,CACI7S,MAAO,CAAE8S,YAAa,GACtBC,QACA,cAACC,GAAA,EAAD,CACI9Q,MAAM,UACN2O,SAAUgB,EACVlM,SAAU,SAAAC,GACV0L,GAA2B1L,EAAME,OAAOmN,YAI5CxK,MACA,eAACuI,GAAA,EAAD,CAAY7H,QAAQ,QAApB,2BAEI,uBACA+H,SAAU,EACVC,KAAK,SAFL,UAIC,IAJD,8BAWR,cAAClI,GAAA,EAAD,CACE3R,KAAK,SACLsZ,WAAS,EACTzH,QAAQ,YACRnF,KAAK,QACL9B,MAAM,YACN1E,QApLiB,WAGnB,GAFA2U,GAAsB,GACtBnC,GAAmB,GACdwC,KAAL,CAEA,IAAMzZ,EAAO,CACT4V,UAAW6C,EAAkBlB,QAAQjZ,MACrCuX,SAAU6C,EAAiBnB,QAAQjZ,MACnCyM,SAAU4N,EAAcpB,QAAQjZ,MAChC0Z,SAAUY,EAAiBrB,QAAQjZ,OAEvC6J,MAhCsB3I,0DAgCG,CACjBuT,OAAQ,OACR/S,KAAMF,KAAK2D,UAAUzD,GACrBH,QAAS,CAAC,eAAgB,oCAE7BS,KAAK2R,GACL3R,MAAK,SAAA8H,GAAI,OAAIA,EAAKC,UAClB/H,MAAK,SAAA4R,IACuB,IAArBA,EAASiI,QACT1I,GAAY,IAGZ+E,EAAWY,GACXoB,QAGPlQ,OAAM,SAAA+J,GAAG,OAAI9J,QAAQC,IAAI6J,QA0J5BlC,SAAUmI,EAPZ,yBAeR,IAAMX,GAAY1b,IAAOC,IAAV,MAKT2W,GAAe5W,IAAOC,IAAV,M,2KC/NH,SAASke,KAAa,IAAD,EAENnb,mBAAS,IAFH,mBAEzBob,EAFyB,KAElBC,EAFkB,KAWhC,OANAna,qBAAU,WACNgI,MAHe3I,2DAIdc,MAAK,SAAA8H,GAAI,OAAIA,EAAKC,UAClB/H,MAAK,SAAAjE,GAAI,OAAIie,EAASje,EAAKke,cAC7B,CAACF,IAGA,cAACG,GAAD,UAAiBH,IAKzB,IAAMG,GAAiBve,YAAOwe,KAAPxe,CAAH,MCuBLye,OA7Bf,WAAgB,IAAD,EACazb,mBAAS,SADtB,mBACN5B,EADM,KACCsd,EADD,KAGb,OACE,cAAC,IAAD,CAAetd,MAAOiR,GAAOjR,GAA7B,SACA,cAAC,GAAD,UACA,cAAC,EAAD,UACA,cAAC,EAAD,UACE,cAAC,IAAD,UACE,sBAAK0I,UAAU,MAAf,UACE,cAACiF,GAAD,CAAQ4P,aAAcvd,EAAOsd,SAAUA,IACvC,cAACnR,GAAD,IACA,cAAC,IAAD,CAAOqR,KAAMrb,cAAuCsb,UAAW5M,KAC/D,cAAC,IAAD,CAAO6M,OAAK,EAACF,KAAMrb,IAAiCsb,UAAW5O,KAC/D,cAAC,IAAD,CAAO2O,KAAMrb,iBAA8Csb,UAAW/S,KACtE,cAAC,IAAD,CAAO8S,KAAMrb,kBAAgDsb,UAAW5J,KACxE,cAAC,IAAD,CAAO2J,KAAMrb,aAAsCsb,UAAWhF,KAC9D,cAAC,IAAD,CAAO+E,KAAMrb,YAAqCsb,UAAWzC,KAC7D,cAAC,IAAD,CAAOwC,KAAMrb,SAAkCsb,UAAWvE,KAC1D,cAAC,IAAD,CAAOsE,KAAMrb,SAAkCsb,UAAWV,mBC7BpEY,EAAQ,KAAUC,SAElBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFjR,SAASkR,eAAe,W","file":"static/js/main.454afc50.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components';\n\n\nexport default function Card(props) {\n    return <CardDiv>{props.children}</CardDiv>\n}\n\nconst CardDiv = styled.div`\n    display: flex;\n    box-sizing: border-box;\n    height: 100%;\n    padding: 20px;\n    border-radius: 2px;\n    background: #fff;\n    border-bottom: 5px solid #cfcfcf;\n`","import React from 'react'\nimport Card from './Card';\nimport {CanvasJS, CanvasJSChart} from 'canvasjs-react-charts'\n\n\nexport function Chart(props) {\n    const symbol = props.symbol\n    const data = props.chartdata.map(daily => ({x: new Date(daily.date), y: daily.price}))\n    const minY = data ? Math.floor(Math.min(...(data.map(point => point.y)))/2) : 0\n    \n    const options = {\n        animationEnabled: true,\n        theme: \"light2\",\n        height: 400,\n        title:{\n            text: `Stock Price of ${symbol}`,\n            fontSize: 22,\n            horizontalAlign: \"center\"\n        },\n        axisX:{\n            valueFormatString: \"YYYY.MM.DD\",\n            crosshair: {\n                enabled: true,\n                snapToDataPoint: true\n            }\n        },\n        axisY: {\n            title: \"Closing Price (USD)\",\n            valueFormatString: \"$##0.00\",\n            minimum: minY,\n            crosshair: {\n                enabled: true,\n                snapToDataPoint: true,\n                labelFormatter: function(e) {\n                    return \"$\" + CanvasJS.formatNumber(e.value, \"##0.00\");\n                }\n            }\n        },\n        data: [{\n            type: \"area\",\n            xValueFormatString: \"YYYY.MM.DD\",\n            yValueFormatString: \"$##0.00\",\n            dataPoints: data.sort((a, b) => a.x - b.x)\n        }]\n    }\n\n    return (\n        <Card>\n            <CanvasJSChart options={options}/>\n        </Card>\n    )\n}","import React, { createContext, useState, useEffect } from 'react';\nimport { Client, Message } from '@stomp/stompjs';\nimport axios from 'axios';\n\nexport const StockDataContext = createContext()\n\nexport const StockDataProvider = (props) => {\n    const [stockList, setStockList] = useState([])\n    const [stockData, setStockData] = useState([])\n    const [stomClient, setStompClient] = useState()\n    const stockBaseRoute = process.env.REACT_APP_ORIGIN + process.env.REACT_APP_STOCK_BASE_ROUTE\n    const websocketRoute = process.env.REACT_APP_WEBSOCKET_ROUTE\n    const stockListTopic = process.env.REACT_APP_STOMP_STOCKLIST\n    const stockDataTopic = process.env.REACT_APP_STOMP_STOCKDATA\n\n    useEffect(() => {\n        axios.get(stockBaseRoute)\n        .then(data => setStockList(data.data))\n    }, [])\n\n    useEffect(() => {\n        const client = new Client()\n        client.brokerURL = websocketRoute\n        client.onConnect = frame => {\n            client.subscribe(stockListTopic, onMessageHandler)\n            client.subscribe(stockDataTopic, onMessageHandler)\n        }\n        client.activate()\n        setStompClient(client)\n        return () => client.deactivate()\n    }, [])\n\n    function onMessageHandler(message) {\n        const destination = message.headers.destination\n        const data = JSON.parse(message.body)\n        if (destination === stockListTopic) {\n            setStockData(data)\n        }\n        if (destination === stockDataTopic) {\n            setStockData(prevState => prevState.map(\n                element => element.symbol === data.symbol ? data : element))\n        }\n    }\n\n    function getStock(symbol) {\n        const [stock] = stockData.filter(s => s.symbol === symbol)\n        return stock\n    }\n\n    function getStockName(symbol) {\n        const [stock] = stockList.filter(s => s.symbol === symbol)\n        return stock && stock.companyName\n    }\n    \n    return (\n        <StockDataContext.Provider value={[getStockName, stockData, getStock, stockList.map(s => s.symbol)]}>\n            {props.children}\n        </StockDataContext.Provider>\n    )\n}","import React, { useContext } from 'react'\nimport styled from 'styled-components';\nimport Card from './Card';\nimport { StockDataContext } from '../StockDataContext';\n\nexport function StockData(props) {\n    const getData = useContext(StockDataContext)[2]\n    const stockData = props.data\n    const priceData = getData(stockData.symbol)\n    const lastTrade = new Date(stockData.lastTradeTime)\n    const marketCap = new Intl.NumberFormat().format(stockData.marketCap)\n    const avgVolume = new Intl.NumberFormat().format(stockData.avgTotalVolume)\n    return (\n        <Card>\n            <Table>\n                <tbody>\n                    {priceData && <StyledTr><TdLeft>Current price</TdLeft><TdRight>{priceData.latestPrice}</TdRight></StyledTr>}\n                    <StyledTr><TdLeft>Previous close</TdLeft><TdRight>{stockData.previousClose}</TdRight></StyledTr>\n                    <StyledTr><TdLeft>Market cap</TdLeft><TdRight>{marketCap}</TdRight></StyledTr>\n                    <StyledTr><TdLeft>52 Week range</TdLeft><TdRight>{stockData.week52Low + \" - \"  + stockData.week52High}</TdRight></StyledTr>\n                    <StyledTr><TdLeft>Average volume</TdLeft><TdRight>{avgVolume}</TdRight></StyledTr>\n                    <StyledTr><TdLeft>P/E ratio</TdLeft><TdRight>{stockData.peRatio}</TdRight></StyledTr>\n                    <StyledTr><TdLeft>Year-to-Date change</TdLeft><TdRight>{Math.round(stockData.ytdChange * 10000)/100 + \"%\"}</TdRight></StyledTr>\n                    <StyledTr><TdLeft>Last trade time</TdLeft><TdRight>{lastTrade.toLocaleDateString() + \" \" + lastTrade.toLocaleTimeString()}</TdRight></StyledTr>\n                </tbody>\n            </Table>\n        </Card>\n    )\n}\n\nconst TdLeft = styled.td`\n    border-bottom: 1px solid #ddd;\n    padding: 10px;\n    text-align: left;\n`\n\nconst TdRight = styled.td`\n    border-bottom: 1px solid #ddd;\n    text-align: right;\n`\nconst StyledTr = styled.tr`\n\n`\nconst Table = styled.table`\n    @media (max-width: 768px){\n        font-size: 1.2em;\n        margin-left: auto;\n    }\n`\n","import React, { createContext, useState } from 'react';\n\nexport const FavContext = createContext();\n\nexport const FavProvider = (props) => {\n    const [favourites, setFavourites] = useState(localStorage.getItem(\"favourites\")? JSON.parse(localStorage.getItem(\"favourites\")) : [])\n\n    const addToFav = (stockData) => {\n        setFavourites(prev => {\n            let updated = [...prev, stockData]\n            localStorage.setItem(\"favourites\", JSON.stringify(updated))\n            return updated\n        })\n    }\n\n    const removeFromFav = (stockData) => {\n        const filteredFav = favourites.filter(f => f.symbol !== stockData.symbol)\n        setFavourites(filteredFav)\n        localStorage.setItem(\"favourites\", JSON.stringify(filteredFav))\n    }\n\n    const move = (symbol, dir) => {\n        let movedItem = favourites.filter(fav => fav.symbol === symbol)[0]\n        let movedIdx = favourites.indexOf(movedItem)\n        let moveTo;\n        if (movedIdx + dir === favourites.length) moveTo = 0;\n        else if (movedIdx + dir < 0) moveTo = favourites.length - 1\n        else moveTo = movedIdx + dir\n        let reordered = favourites.filter(fav => fav.symbol !== symbol)\n        reordered.splice(moveTo, 0, movedItem)\n        setFavourites(reordered)\n        localStorage.setItem(\"favourites\", JSON.stringify(reordered))\n    }\n\n    return (\n        <FavContext.Provider value = {[favourites, addToFav, removeFromFav, move]}>\n            {props.children}\n        </FavContext.Provider>\n    )\n}\n","import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport styled, { css } from 'styled-components';\nimport Card from './Card';\nimport { FavContext } from '../favourites/FavContext'\nimport { StockDataContext } from '../StockDataContext';\n\n\nfunction FavouriteDiv(props) {\n    const [favourites, addToFav, removeFromFav] = useContext(FavContext)\n    const tradeRoute = process.env.REACT_APP_TRADE_PAGE\n      \n    return (\n        <div>{(favourites.length === 0 | favourites.filter(f => f.symbol === props.symbol).length === 0) \n            ? <FavButton onClick={()=>addToFav(props.stockdata)}>Follow</FavButton>\n            : <UnFavButton onClick={()=>removeFromFav(props.stockdata)}>Unfollow</UnFavButton>}\n            <TradeButton><StyledLink to={tradeRoute + \"/\" + props.symbol}>TRADE</StyledLink></TradeButton>\n        </div>)\n}\n\nexport function StockHeader(props) {\n    \n    const stockData = props.data\n    const getStockName = useContext(StockDataContext)[0]\n    const getData = useContext(StockDataContext)[2]\n    const companyName = getStockName(stockData.symbol);\n    const priceData = getData(stockData.symbol)\n\n    return (\n        <Card>\n            <SymbolHeader>\n                {companyName &&\n                <Symbol>{companyName} {\" (\" + stockData.symbol + \")\"}</Symbol>}\n                <FavouriteDiv stockdata={stockData} symbol={stockData.symbol}/>\n                {priceData && <>\n                <FloatDiv>{priceData.latestPrice}</FloatDiv>\n                <FloatDiv>\n                <ChangeDiv up={priceData.change >= 0}>\n                    {(priceData.change >= 0 ? \"+\" : \"\") + Math.round(priceData.change * 100)/100 + \" \"}\n                    {Math.round(priceData.changePercent * 10000)/100 + \"%\"}\n                </ChangeDiv>\n                </FloatDiv> </>}\n            </SymbolHeader>\n        </Card>\n        )\n    }\n\n\nconst SymbolHeader = styled.div`\n    display: inline-block;\n    float: none;\n`\n\nconst Symbol = styled.div`\n    font-size: 1.8em;\n    font-weight: bold;\n    margin: 5px;\n`\n\nconst FloatDiv = styled.div`\n    font-size: 1.2em;\n    font-weight: bold;\n    float: left;\n    margin: 5px;\n`\nconst ChangeDiv = styled.div`\n    padding-top: 0.2em;\n    font-size: 0.8em;\n    color: green;\n    vertical-align: bottom;\n\n    ${({up}) => up === false && css`\n        color: red;\n    `}\n`\n\n\nconst FavButton = styled.button`\n    background-color: #21255e;\n    color: white;\n    font-weight: bolder;\n    font-size: 1.2em;\n    cursor: pointer;\n`\n\nconst UnFavButton = styled.button`\n    background-color: #47485e;\n    color: white;\n    font-weight: bolder;\n    font-size: 1.2em;\n    cursor: pointer;\n`\n\nconst TradeButton = styled.button`\n    background-color: #21255e;\n    color: white;\n    font-weight: bolder;\n    font-size: 1.2em;\n    cursor: pointer;\n    margin: 5px;\n`\n\nconst StyledLink = styled(Link)`\n    color: white;\n    text-decoration: none;\n    & :visited{\n        color: white;\n        text-decoration: none\n    }\n`","import React from 'react';\nimport styled from 'styled-components';\n\nexport default function NewsItem(props) {\n    return (\n        <React.Fragment>            \n            <NewsSection className =\"newsSection\">\n                <ImageContainer>\n                    <img alt={props.symbol} src={props.news.image} width=\"100%\"></img>\n                </ImageContainer>\n                <NewsContent className=\"newsContent\">\n                    <Title href={props.news.url}>{props.news.headline}</Title>\n                    <SourceInfo>\n                        <div>By {props.news.source}</div>\n                        <div>{new Date(props.news.datetime).toLocaleString()}</div>\n                    </SourceInfo>\n                    <p>{props.news.summary}</p>\n                </NewsContent> \n            </NewsSection>\n\n        </React.Fragment>\n    )\n}\n\n\nconst NewsSection = styled.div`\n    margin: auto;\n    width: 100%;\n    display: flex;\n    justify-content: space-evenly;\n    margin-top: 4em;\n    @media (max-width: 768px){\n        width: 80%;\n        flex-direction: column;\n    }\n    `\n\nconst NewsContent = styled.div`\n    width: 50%;\n    @media (max-width: 768px){\n        font-size: 1.2em;\n        width: 100%;\n        margin: 1em auto 0;\n    }\n\n`\nconst ImageContainer = styled.div`\n    width: 35%;\n    @media (max-width: 768px){\n        width: 100%;\n        margin:auto;\n    }\n`\n\nconst SourceInfo = styled.div`\n    margin: 0.5em 0;\n    font-style: italic;\n`\n\nconst Title = styled.a`\n    text-decoration: none;\n    font-size: 1.5em;\n    font-weight: bolder;\n    font-family: Georgia, 'Times New Roman', Times, serif;\n    color: black;\n    &:hover{\n        color:blue\n    }\n`","import React from 'react';\nimport NewsItem from './NewsItem';\n\nexport function News(props) {\n\n    return (\n        <div style={newsDivStyle}>\n            {props.data.map((n, i) => <NewsItem symbol={props.symbol} key = {i} news = {n}></NewsItem>)}\n        </div>\n    )\n}\n\nconst newsDivStyle = {\n    margin: \"4em auto\",\n    maxWidth: \"1400px\",\n    minWidth: \"768px\",\n}","import React from 'react';\nimport ReactPlayer from 'react-player';\nimport styled from 'styled-components';\n\nexport function Video(props) {\n    let random = Math.floor(Math.random() * props.videos.length);\n\n    return (\n        <VideoContainer className=\"videoContainer\">\n            <CustomReactPlayer url={`http://www.youtube.com/watch?v=${props.videos[random].videoId}`}/>\n        </VideoContainer>\n    )\n}\n\nconst VideoContainer = styled.div`\n    margin: 4em auto 2em;\n    width: 100%;\n`\n\n\nconst CustomReactPlayer = styled(ReactPlayer)`\n    /* padding-top: 60px; */\n    margin: auto;\n`","\nimport React, {useState, useEffect } from 'react'\nimport {useParams} from 'react-router-dom';\nimport styled from 'styled-components';\nimport {Chart, News, StockData, StockHeader, Video} from './detailedView';\n\n\nexport function DetailedView() {\n    const [stockInfo, setStockInfo] = useState(0)\n    const {symbol} = useParams();\n    const stockRoute = process.env.REACT_APP_ORIGIN + process.env.REACT_APP_STOCK_ROUTE\n    \n    useEffect(() => {\n        fetch(stockRoute + symbol, {\n                headers: {\n                    'Content-Type': 'application/json;charset=utf-8'\n                }\n            })\n            .then(resp => resp.json())\n            .then(data => setStockInfo(data))\n            .catch(e => console.log(e))\n    }, [symbol])\n\n\n    return (\n        <DetailedContainer className=\"detailedContainer\">\n            {stockInfo !== 0 ?\n                <React.Fragment>\n                    <StockDiv>\n                        <HeaderDiv>\n                            <StockHeader data={stockInfo}></StockHeader>                          \n                        </HeaderDiv>\n                        <DataDiv><StockData data={stockInfo}></StockData></DataDiv>\n                        <ChartDiv>\n                            <Chart symbol={symbol} chartdata={stockInfo.stockPrices}></Chart>\n                        </ChartDiv>\n                    </StockDiv>\n                    <Video videos={stockInfo.videoLinkList}></Video>\n                    <News symbol={symbol} data={stockInfo.newsList}></News>\n                </React.Fragment>\n                : <React.Fragment>Loading</React.Fragment>\n            }\n        </DetailedContainer>\n    )\n}\n\nconst DetailedContainer = styled.div`\n    width: 100%;\n    display: block;\n`\n\nconst StockDiv = styled.div`\n    display: grid;\n    margin: 2em auto;\n    width: 84%;\n    grid-template-columns: 50% 50%;\n    grid-template-rows: auto auto;\n    @media (max-width: 768px){\n        grid-template-columns: 30% 70%;\n    }\n`\n\nconst HeaderDiv = styled.div`\n    grid-row: 1 / 2;\n    grid-column: 1 / 3;\n    @media (max-width: 768px){\n        margin-right:auto;\n        grid-row: 2 / 3;\n        grid-column: 1 / 2;\n    }\n`\n\n\nconst DataDiv = styled.div`\n    grid-row: 2 / 3;\n    grid-column: 1 / 2;\n    @media (max-width: 768px){\n        grid-row: 2 / 3;\n        grid-column: 2 / 3;\n    }\n`\n\nconst ChartDiv = styled.div`\n    grid-row: 2 / 3;\n    grid-column: 2 / 3;\n    @media (max-width: 768px){\n        grid-row: 3 / 4;\n        grid-column: 1 / 3;\n    }\n`","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport default function ListItem(props) {\n    const symbolData = props.symbol\n    const stockRoute = process.env.REACT_APP_STOCK_PAGE\n\n    const theme = {\n        color: (symbolData && symbolData.changePercent >= 0) ? \"green\" : \"red\"\n    }\n\n    return (\n        <React.Fragment>\n            <Summary>\n                <DetailsLink to={stockRoute + symbolData.symbol} >{symbolData.symbol}</DetailsLink>\n                <div>{symbolData.latestPrice}</div>\n                <div style={theme}>{Math.round(symbolData.changePercent * 10000)/100 + \"%\"}</div>\n                <Tip className=\"tip\">{symbolData.companyName}</Tip>\n            </Summary>\n        </React.Fragment>\n    )\n}\n\nconst Tip = styled.span`\n  visibility: hidden;\n  width: 120px;\n  background-color: #555;\n  color: #fff;\n  text-align: center;\n  padding: 5px 0;\n  border-radius: 6px;\n  position: absolute;\n  z-index: 1;\n  bottom: 110%;\n  left: 50%;\n  margin-left: -60px;\n  opacity: 0;\n  transition: opacity 0.3s;\n`\n\nconst Summary = styled.div`\n    width: 100px;\n    margin: 1em;\n    position: relative;\n    display: inline-block;\n    &:hover ${Tip} {\n        visibility: visible;\n        opacity: 1;\n    }\n\n`\n\nconst DetailsLink = styled(Link)`\n    text-decoration: none;\n    font-weight:bold;\n    color: #21255e;\n    :hover {\n        text-decoration: underline\n    }\n    :visited {\n        color: #21255e;\n    }\n`","import React, { useContext } from 'react';\nimport { StockDataContext } from './StockDataContext';\nimport ListItem from './ListItem';\nimport styled from 'styled-components';\n\n\nexport function ListMain(props) {\n    const stockData = useContext(StockDataContext)[1]\n\n    return (\n        <ListContainer>\n            {stockData && \n            <Center>\n                <List>\n                    {stockData.map(s => <ListItem key={stockData.indexOf(s)} symbol={s}></ListItem>)}\n                </List>\n            </Center>}\n        </ListContainer>\n    )\n}\n\n\nconst ListContainer = styled.div`\n    display: block;\n    width: 100%;\n    @media(max-width: 768px){\n        font-size: 1.4em;\n    }\n`\n\nconst Center = styled.div`\n    margin: auto;\n    width: fit-content;\n`\n\nconst List = styled.div`\n    display: inline-flex;\n    flex-wrap: wrap;\n    justify-content: flex-start;\n    padding: 20px;\n\n`","import React, { createContext, useState, useEffect } from 'react';\n\nexport const UserContext = createContext();\n\nexport const UserProvider = (props) => {\n    const [userData, setUserData] = useState({\n        loggedIn: false,\n        userName: undefined\n    })\n\n    useEffect(() => {\n        if (document.cookie) {\n            const token = document.cookie.split('; ').find(row => row.startsWith('access_token=')).split('=')[1];\n            if (token) {\n                setUserData({loggedIn: true, userName: undefined})\n            }\n        }\n    }, [])\n\n    return (\n        <UserContext.Provider value={[userData, setUserData]}>\n            {props.children}\n        </UserContext.Provider>\n    )\n}","import React, {Fragment, useContext} from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { UserContext } from '../UserContext';\n\n\n\nexport default function NavLinks(props) {\n    const [userData, setUserData] = useContext(UserContext)\n    \n    const close = () => {\n        if (props.menuType === \"burger\") props.closeMenu()\n    }\n\n    const handleLogout = () => {\n        setUserData({\n            loggedIn: false,\n            username: undefined\n        })\n        removeCookie(\"access_token\")\n        close()\n    }\n\n    const removeCookie = (name) => {\n        document.cookie = `${name}= ; expires = Thu, 01 Jan 1970 00:00:00 GMT`\n    }\n\n    return (\n        <React.Fragment>\n            <StyledLink onClick={close} to={process.env.REACT_APP_HOME_PAGE}>Home</StyledLink>\n            <StyledLink onClick={close} to={process.env.REACT_APP_FAVOURITES_PAGE}>Favourites</StyledLink>\n            {userData.loggedIn\n            ?   <Fragment>\n                    <StyledLink onClick={close} to={process.env.REACT_APP_TRADE_PAGE}>Trade</StyledLink>\n                    <StyledLink onClick={close} to={process.env.REACT_APP_PORTFOLIO_PAGE}>Portfolio</StyledLink>\n                    <StyledLink to={process.env.REACT_APP_HOME_PAGE} onClick={handleLogout}>Logout</StyledLink>\n                </Fragment>\n            :   <Fragment>\n                    <StyledLink onClick={close} to={process.env.REACT_APP_REGISTER_PAGE}>Register</StyledLink>\n                    <StyledLink onClick={close} to={process.env.REACT_APP_LOGIN_PAGE}>Login</StyledLink>\n                </Fragment>\n            }\n            <StyledLink onClick={close} to={process.env.REACT_APP_ABOUT_PAGE}>About</StyledLink>\n        </React.Fragment>\n    )\n}\n\nconst StyledLink = styled(Link)`\n    display: inline-block;\n    vertical-align:middle;\n    line-height:60px;\n    font-family: source_sans_prosemibold, Helvetica, Arial, sans-serif;\n    text-align: center;\n    box-sizing: border-box; \n    text-decoration: none;\n    font-size: 1.2em;\n    font-weight: 500;\n    width: 140px;\n    color: #fff;\n    text-shadow: 0px 2px 3px rgba(0,0,0,0.4),\n                0px 6px 11px rgba(0,0,0,0.1),\n                0px 12px 21px rgba(0,0,0,0.1);\n\n    :hover {\n        color:#21255e;\n        background-color:#fff;\n        transition-duration: 0.4s;\n        transition-timing-function: ease;\n        text-shadow: 0px 2px 3px rgba(0,0,0,0.4),\n                0px 8px 13px rgba(0,0,0,0.1),\n                0px 18px 23px rgba(0,0,0,0.1);\n    }\n    @media(max-width: 768px){\n        height: 50px;\n    }\n`","import React, { useState} from 'react'\nimport styled from 'styled-components';\nimport { slide as Menu } from 'react-burger-menu';\nimport '../../Nav.css'\nimport NavLinks from './NavLinks'\nimport useWindowSize from './useWindowSize';\n\nexport function Navbar(props) {\n    const [width, height] = useWindowSize();\n    const [isOpen, setIsOpen] = useState(false)\n    \n    const closeMenu = () => setIsOpen(false)\n    const handleStateChange = (state) => { setIsOpen(state.isOpen)} \n\n    return (\n        <Container>\n            {width > 768? \n            <NavDiv className=\"navbar\"><NavLinks menuType=\"nav\"/></NavDiv>\n            :<Menu onStateChange={state => handleStateChange(state)} \n            isOpen={isOpen} \n            className=\"burger\">\n                <NavLinks menuType=\"burger\" closeMenu={closeMenu}/>\n            </Menu>\n            }\n        </Container>\n    )\n}\n\n\nconst Container = styled.div`\n    height: 60px;\n    width: 100%;\n    background-color:#21255e;\n    box-shadow: rgba(50, 50, 93, 0.25) 0px 13px 27px -5px, rgba(0, 0, 0, 0.3) 0px 8px 16px -8px;\n`\n\nconst NavDiv = styled.div`\n    height: 100%;\n    display: block;\n    @media(max-width: 768px){\n        display: none;\n    }\n`\n\n","import React, { useState, useLayoutEffect} from 'react'\n\nexport default function useWindowSize() {\n    const [size, setSize] = useState([0, 0]);\n    useLayoutEffect(() => {\n        function updateSize() {\n        setSize([window.innerWidth, window.innerHeight]);\n        }\n        window.addEventListener('resize', updateSize);\n        updateSize();\n        return () => window.removeEventListener('resize', updateSize);\n    }, []);\n    return size;\n}\n","export default __webpack_public_path__ + \"static/media/modern-business-buildings.4963f08c.jpg\";","import React, {useState, useContext} from 'react';\nimport {Link} from 'react-router-dom'\nimport styled from 'styled-components';\nimport img1 from '../themes/modern-business-buildings.jpg';\nimport { StockDataContext } from './StockDataContext';\n\nexport function SearchBar() {\n    const symbolList = useContext(StockDataContext)[3]\n    const [results, setResults] = useState([]);\n\n    const ResultItem = (props) => (\n        <ListItem to={`/stock/${props.symbol}`} key={props.symbol}>{props.symbol}</ListItem>\n    )\n\n    const handleOnChange = (event) => {\n        const searchTerm = event.target.value.toLowerCase()\n        if (!searchTerm) {\n            setResults([])\n            return;\n        }\n        setResults(symbolList.filter(item => item.toLowerCase().includes(searchTerm)).slice(0, 10))\n    }\n\n    return (\n        <BackGround>\n            <WrapperDiv>\n                <SearchDiv>\n                    <SearchField type=\"text\" placeholder=\"Which stock are you looking for?\" onChange={(e) => handleOnChange(e)}/>\n                    <SearchButton type=\"submit\">\n                    <i className=\"fa fa-search\"></i>\n                    </SearchButton>\n                </SearchDiv>\n                <DropDownDiv>\n                    <DropDownList>\n                        {results && results.map(symbol => <ResultItem key={symbol} symbol={symbol} />)}\n                    </DropDownList>\n                </DropDownDiv>\n            </WrapperDiv>\n        </BackGround>\n    )\n}\n\nconst WrapperDiv = styled.div`\n    position: absolute;\n    min-width: 768px;\n    top: 60%;\n    left: 50%;\n    transform: translate(-25%, -50%);\n    @media (max-width: 768px){\n        top: 85%;\n        left: 0%;\n        transform: none;\n    }\n    \n`\n\nconst SearchDiv = styled.div`\n    position: relative;\n    display: flex;\n    width: max(30%, 400px);\n    @media (max-width: 768px){\n        left: 50%;\n        transform: translate(-50%, 0%);\n    }\n`\n\nconst SearchField = styled.input`\n    font-size: 23px;\n    width: 100%;\n    border: 3px solid #21255e;\n    border-right: none;\n    padding: 5px;\n    height: 25px;\n    border-radius: 5px 0 0 5px;\n    outline: none;\n    color: #151728;\n\n    :focus{\n        color: #21255e;\n    }\n`\n\nconst SearchButton = styled.button`\n    width: 45px;\n    height: 41px;\n    border: 1px solid #21255e;\n    background: #21255e;\n    text-align: center;\n    color: #fff;\n    border-radius: 0 5px 5px 0;\n    cursor: pointer;\n    font-size: 25px;\n `\n\nconst DropDownDiv = styled.div`\n    position: relative;\n    display: inline-block;\n    @media (max-width: 768px){\n        left: 25%;\n    }\n`\n\n const DropDownList = styled.div`\n    display: block;\n    position: absolute;\n    background-color: rgba(255, 255, 255, 0.8);\n    min-width: max(30%, 400px);\n `\n\nconst ListItem = styled(Link)`\n    color: #151728;\n    padding: 12px 16px;\n    text-decoration: none;\n    display: block;\n\n    :hover {\n        color: #009cf0;\n    }\n  `\n\nconst BackGround = styled.div`\n    display: flex;\n    background-image: url(${img1});\n    background-size: cover;\n    background-repeat: no-repeat;\n    min-width: 768px;\n    height: 80vh;\n    width: 100vw;\n`","import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { FavContext } from './FavContext';\nimport styled from 'styled-components';\nimport { StockDataContext } from '../StockDataContext';\n\nexport default function FavItem(props) {\n    const [favourites, addToFav, removeFromFav, move] = useContext(FavContext)\n    const getData = useContext(StockDataContext)[2]\n    const priceData = getData(props.data.symbol)\n    const up = priceData ? priceData.change >= 0 : false; // TODO: This is probably not working now!\n    const tradeRoute = process.env.REACT_APP_TRADE_PAGE\n    const stockRoute = process.env.REACT_APP_STOCK_PAGE\n\n    return (\n        <React.Fragment>{favourites.length > 0 &&\n            <Fav>\n                <ButtonsUpDown>\n                    <button onClick={() => move(props.data.symbol, -1)}><i className=\"fa fa-arrow-up\"></i></button>\n                    <button onClick={() => move(props.data.symbol, 1)}><i className=\"fa fa-arrow-down\"></i></button>\n                </ButtonsUpDown>\n                <Content>\n                    <div>\n                        <Symbol to={stockRoute + props.data.symbol}>{props.data.symbol}</Symbol>\n                        {up? <Icon up={up} className=\"fa fa-caret-up fa-lg\"></Icon> : <Icon up={up} className=\"fa fa-caret-down fa-lg\"></Icon>}                    \n                        <UnFavButton onClick={()=>removeFromFav(props.data)}>Unfollow</UnFavButton>\n                        <TradeButton><StyledLink to={tradeRoute + \"/\" + props.data.symbol}>TRADE</StyledLink></TradeButton>\n                    </div>\n                    { priceData &&\n                    <Details>\n                        <Cell>\n                            <p>Latest price</p>\n                            <p>{priceData.latestPrice}</p>\n                        </Cell>\n                        <Cell>\n                            <p>Change (%)</p>\n                            <p>{Math.round(priceData.changePercent * 10000)/100 + \"%\"}</p>\n                        </Cell>\n                        <Cell>\n                            <p>Previous close</p>\n                            <p>{props.data.previousClose}</p>\n                        </Cell>\n                        <Cell>\n                            <p>Average volume</p>\n                            <p>{props.data.avgTotalVolume}</p>\n                        </Cell>\n                        <Cell>\n                            <p>Market cap</p>\n                            <p>{props.data.marketCap}</p>\n                        </Cell>\n                    </Details>\n                    }\n                </Content>\n            </Fav>\n        }    \n        </React.Fragment>\n    )\n}\n\nconst Fav = styled.div`\n    margin: 3em auto;\n    border: 1px solid #21255e;\n    box-shadow: 5px 10px 5px #21255e;\n    display: flex;\n    flex-direction: row;\n    @media (max-width: 768px) {\n        font-size: 1.2em;\n        width: 75%;\n        margin: 3em auto;\n    }\n`\n\nconst ButtonsUpDown = styled.div`\n    display:flex;\n    padding: 20px;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-evenly\n`\n\nconst Content = styled.div`\n    padding-left: 20px;\n    width: 100%\n`\n\nconst Symbol = styled(Link)`\n    font-size: 2em;\n    font-weight: bold;\n    float:left;\n    text-decoration:none;\n    color: black;\n`\n\nconst Icon = styled.i`\n    color: ${props => props.up? 'green' : 'darkred'};    \n`\n\nconst UnFavButton = styled.button`\n    background-color: #47485e;\n    color: white;\n    font-weight: bolder;\n    font-size: 1.2em;\n    cursor: pointer;\n    float: right;\n    margin: 5px;\n`\n\nconst TradeButton = styled.button`\n    background-color: #21255e;\n    color: white;\n    font-weight: bolder;\n    font-size: 1.2em;\n    cursor: pointer;\n    float: right;\n    margin: 5px;\n`\n\nconst StyledLink = styled(Link)`\n    color: white;\n    text-decoration: none;\n    & :visited{\n        color: white;\n        text-decoration: none\n    }\n`\n\nconst Cell = styled.div`\n    width: 25%;\n    @media (max-width: 768px) {\n        width: 75%;\n        display: flex;\n        flex-direction: row;\n        justify-content: space-between;\n        > p {\n            margin: 3px;\n        }\n    }\n`\n\nconst Details = styled.div`\n    display: flex;\n    flex-direction:row;\n    justify-content: space-evenly;\n    width: 100%;\n    @media (max-width: 768px) {\n        flex-direction: column;\n    }\n`\n\n","import React, { useContext} from 'react';\nimport { FavContext } from './FavContext'\nimport FavItem from \"./FavItem\";\n\n\n\nexport function Favourites() {\n    const [ favourites ] = useContext(FavContext)\n    return (\n        <div style={favDivStyle}>\n            {favourites.length === 0? \n            <p style ={messageStyle}>No items added to the favourites yet</p>\n            :favourites.map(f => <FavItem data={f} key={f.symbol}/>)}\n        </div>\n    )\n}\n\nconst favDivStyle = {\n    maxWidth: \"1000px\",\n    margin: \"4em auto\"\n}\n\nconst messageStyle = {\n    margin: \"4em auto\",\n    textAlign:\"center\"\n}","\nconst lightTheme = {\n    color: \"white\"\n}\n\nconst darkTheme = {\n    color: \"grey\"\n}\n\nexport const themes = {\n    light: lightTheme,\n    dark: darkTheme\n}\n\n","import React from 'react';\nimport styled from 'styled-components';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { InputLabel } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Button from '@material-ui/core/Button';\n\n\nexport default function TradeForm(props) {\n    let {symbol, symbolList, limitPrice, count, direction, handleChange, handleSubmit, selectSymbol, notAllValid} = props\n    const [value, setValue] = React.useState(symbol);    \n\n    return (\n        <StyledForm autoComplete=\"off\">\n            <Autocomplete \n            className=\"item\"\n            options={symbolList}\n            value={value}\n            onChange={(event, newValue) => {\n                setValue(newValue);\n                selectSymbol(newValue)\n            }}\n\n            renderInput={(params) => (\n                <TextField\n                {...params}\n                label=\"Symbol\"\n                name=\"symbol\"\n                />\n            )}/>\n            \n            <FormControl className=\"item\" >\n                <InputLabel >Action</InputLabel>\n                <Select label=\"Action\" name=\"direction\" value={direction} onChange = {handleChange}>\n                    <MenuItem value=\"-\">-</MenuItem>\n                    <MenuItem value=\"BUY\">BUY</MenuItem>\n                    <MenuItem value=\"SELL\">SELL</MenuItem>\n                </Select>\n            </FormControl>\n            <TextField \n                className=\"item\"\n                label=\"Stock Count\" \n                name=\"count\" \n                type=\"number\" \n                value={count} \n                onChange={handleChange}\n                InputProps={{ inputProps: { min: 1, step: 1 } }}/>\n\n            <TextField \n                className=\"item\"\n                label=\"Limit Price\" \n                name=\"price\" \n                type=\"number\" \n                value={limitPrice} \n                onChange={handleChange}\n                InputProps={{ inputProps: { min: 0.01, step: 0.01 } }}/>\n            <Button disabled={notAllValid} onClick={handleSubmit} color=\"primary\" variant=\"contained\" >Trade!</Button>\n\n        </StyledForm>\n    )\n}\n\n\nconst StyledForm = styled.form`\n    display: flex;\n    flex-direction: column;\n    margin: -1em, auto;\n    > .item {\n        width: 80%;\n        margin: 1em auto;\n    }\n`\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Dialog } from '@material-ui/core';\n\nexport default function ConfirmDialog(props) {\n    let { confirmClose, handleSubmit, confirmIsOpen, symbol, direction, count, limitPrice } = props;\n    \n\n    return (\n        <div>\n            <Dialog open={confirmIsOpen} onClose={confirmClose}>\n                <DialogTitle id=\"alert-dialog-title\">{\"Do you want to place the following order?\"}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        <span>Symbol: {symbol}</span><br/>\n                        <span>Action: {direction}</span><br/>\n                        <span>Amount: {count}</span><br/>\n                        <span>Limit Price: {limitPrice} USD</span><br/>\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={confirmClose} color=\"primary\">Disagree</Button>\n                    <Button onClick={handleSubmit} color=\"primary\" autoFocus>Agree</Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    )\n}\n","\nimport React, { useState, useContext, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport styled from 'styled-components';\nimport Modal from '@material-ui/core/Modal';\nimport TradeForm from './TradeForm';\nimport ConfirmDialog from './ConfirmDialog';\nimport {StockDataContext} from '../StockDataContext';\nimport { UserContext } from '../UserContext';\n\nexport default function Trade(props) {\n    const symbolList = useContext(StockDataContext)[3]\n    const setUserData = useContext(UserContext)[1]\n    const [symbol , setSymbol] = useState(props.match.params.symbol ? props.match.params.symbol : symbolList[0]);\n    const [limitPrice, setLimitPrice] = useState(0);\n    const [direction, setDirection] = useState(\"-\");\n    const [count, setCount] = useState(1);\n    const [redirect, setRedirect] = useState(false);\n    const [open, setOpen] = useState(false);\n    const [error, setError] = useState(\"\");\n    const [confirmIsOpen, setConfirmOpen] = useState(false);\n    const [notAllValid, setNotAllValid] = useState(true)\n    \n    const tradeRoute = process.env.REACT_APP_ORIGIN + process.env.REACT_APP_TRADE_ROUTE\n    const portfolioRoute = process.env.REACT_APP_PORTFOLIO_PAGE\n\n    const errorOpen = () => setOpen(true);\n    const errorClose = () => setOpen(false);\n    const confirmOpen = () => setConfirmOpen(true);\n    const confirmClose = () => setConfirmOpen(false);\n    const selectSymbol = (symbol) => setSymbol(symbol);\n    const allValid = () => setNotAllValid(!symbolList.includes(symbol) || count <=0 || limitPrice <= 0 || direction===\"-\")\n\n    useEffect(() => {\n        allValid()\n    }, [symbol, limitPrice, direction, count])\n    \n    const handleSubmit = () => {\n        const body = {\n            symbol: symbol,\n            limitPrice: limitPrice,\n            direction: direction,\n            status: \"PENDING\",\n            count: count\n        }\n\n        if (!document.cookie) return\n        const token = document.cookie.split('; ').find(row => row.startsWith('access_token=')).split('=')[1];\n        \n        fetch(tradeRoute, {\n            method: \"post\",\n            body: JSON.stringify(body),\n            headers: {\n                'Authorization': 'Bearer ' + token,\n                'Content-Type': 'application/json;charset=utf-8',\n                },\n        })\n        .then(handleBadRequest)\n        .then(resp => resp.json())    \n        .then(data => {\n            if (data === \"COMPLETED\") setRedirect(true)\n            else showError(createFeedbackMessage, data)\n        })\n        .catch(e => console.log(e))\n\n    }\n\n    const handleChange = (e) => {\n        const data = e.target.value;\n        switch (e.target.name){\n            case \"price\":\n                setLimitPrice(data);\n                break;\n            case \"direction\":\n                setDirection(data);\n                break;\n            case \"count\":\n                setCount(data);\n                break;\n            default:\n                break;\n        }\n    }\n\n    const createFeedbackMessage = (data) => {\n        let msg = \"Transaction failed.\\n\";\n        switch (data){\n            case \"LIMIT_PRICE_MISMATCH\":\n                msg += \"Limit price does not match current stock price\";\n                break;\n            case \"INSUFFICIENT_FUND\":\n                msg += \"Balance not sufficient to execute transaction\";\n                break;\n            case \"INSUFFICIENT_STOCK\":\n                msg += \"Owned stock not sufficient to execute transaction\";\n                break;\n            case \"DATABASE_PROBLEM\":\n                msg += \"Transaction could not be finalized due to database problems\";\n                break;\n            default:\n                msg += \"Invalid data sent in request\"\n        }\n        setError(msg);\n    }\n\n    const handleBadRequest = (response) => {\n        if (!response.ok) {\n            if (response.status === 403) {\n                setRedirect(true)\n                setUserData({ loggedIn : false, userName : undefined })\n            } else if (response.status === 400){\n                response.json()\n                    .then(err => showError(setError, err.message))\n                    .catch(e => showError(setError, \"Transaction failed, no action (BUY/SELL) specified\"))\n            }\n            throw Error(response.statusText)\n        }\n        else {\n            return response\n        }\n    }\n\n    const showError = (func, data) => {\n        confirmClose()\n        func(data)\n        errorOpen()\n    }\n\n    return (\n        <TradeDiv>\n            {redirect === true \n            ? <Redirect to={portfolioRoute} /> \n            : <React.Fragment> \n                <StyledH2>Place an order</StyledH2>\n                <TradeForm symbol={symbol} symbolList={symbolList} limitPrice={limitPrice} count={count} direction={direction}\n                 notAllValid={notAllValid} selectSymbol={selectSymbol} handleChange={handleChange} handleSubmit={confirmOpen} />\n            </React.Fragment>\n            }\n            <Modal open={open} onClose={errorClose}><ModalContent>{error}</ModalContent></Modal>\n            <ConfirmDialog \n                confirmClose={confirmClose}\n                handleSubmit={handleSubmit}\n                confirmIsOpen={confirmIsOpen} \n                symbol={symbol} \n                direction={direction} \n                count={count} \n                limitPrice={limitPrice}></ConfirmDialog>\n        </TradeDiv>\n    )\n}\n\n\nconst TradeDiv = styled.div`\n    display: block;\n    margin: 5em auto;\n    border: 2px solid #21255e;\n    box-shadow: 5px 10px 5px #21255e;\n    width: 450px;\n`\n\nconst ModalContent = styled.div`\n    padding: 2em;\n    background-color:white;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n`\n\nconst StyledH2 = styled.h2`\n    text-align: center;\n    color: #21255e\n`","import React from 'react';\nimport styled from 'styled-components';\n\nexport default function HistoryItem({transaction}) {\n    return (\n        <React.Fragment>\n            <tr>\n                <DataCell>{transaction.transactionTime.slice(0, transaction.transactionTime.indexOf(\".\")).replace(\"T\", \" \")}</DataCell>\n                <DataCell>{transaction.stockChange < 0 ? \"SELL\": \"BUY\"}</DataCell>\n                <DataCell>{Math.abs(transaction.stockChange)}</DataCell>\n                <DataCell>{transaction.stockPrice}</DataCell>\n                <DataCell>{((transaction.stockPrice * transaction.stockChange).toFixed(2) * -1.0)}</DataCell>\n                <DataCell>{transaction.stockCountAfter}</DataCell>\n                <DataCell>{transaction.balanceAfter}</DataCell>\n            </tr>\n        </React.Fragment>\n    )\n}\n\n\nconst DataCell = styled.td`\n    text-align: center;\n    padding: 1em 1em;\n`","import React from 'react';\nimport styled from 'styled-components';\nimport HistoryItem from './HistoryItem';\nimport { Link } from 'react-router-dom';\n\nexport default History = React.forwardRef((props, ref) => (\n    <ModalContent>\n        <Title>Transaction history for stock: <Symbol to={process.env.REACT_APP_STOCK_PAGE + props.symbol}>{props.symbol}</Symbol></Title>\n        <HistoryTable>\n            <Header>\n                <tr>\n                <HeaderCell>Date</HeaderCell>\n                <HeaderCell>Action</HeaderCell>\n                <HeaderCell>Amount</HeaderCell>\n                <HeaderCell>Stock Price</HeaderCell>\n                <HeaderCell>Balance change ({props.currency})</HeaderCell>\n                <HeaderCell>Stock Count After</HeaderCell>\n                <HeaderCell>Balance After ({props.currency})</HeaderCell>\n                </tr>\n            </Header>\n            <tbody>\n                {props.transactions && props.transactions.sort(compare).map(h => <HistoryItem key={h.id} transaction={h}></HistoryItem>)}\n            </tbody>\n        </HistoryTable>\n        </ModalContent>\n))\n\nconst compare = (a, b) => Date.parse(a.transactionTime) > Date.parse(b.transactionTime) ? -1 : 1;\n\nconst ModalContent = styled.div`\n    width: 80%;\n    overflow: auto;\n    max-height: 50vh;\n    padding: 2em;\n    background-color:white;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n`\n\nconst Header = styled.thead`\n    border-bottom: 2px solid black;\n    border-top: 2px solid black;\n\n`\n\nconst HistoryTable = styled.table`\n    width: 90%;\n    margin: 2em auto 0;\n    border-collapse: collapse;\n    padding: 0 3em;\n    &:last-child{\n        border-bottom: 2px solid black;\n    }\n\n`\n\nconst Title = styled.div`\n    font-size: 1.5em;\n    font-weight: bold;\n    text-align: center\n`\n\nconst HeaderCell = styled.th`\n    text-align: center;\n    padding: 1em 1em;\n    border-bottom: 1px solid black;\n    border-top: 1px solid black;\n    border-collapse: collapse;\n`\n\nconst Symbol = styled(Link)`\n    color: #21255e;\n    &:visited{\n        color: #21255e;\n    }\n`","import React, { useState, useContext, createRef } from 'react';\nimport Modal from '@material-ui/core/Modal';\nimport History from './History';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { StockDataContext } from '../StockDataContext';\n\n\nexport default function PortfolioItem(props) {\n    const tradeLink = process.env.REACT_APP_TRADE_PAGE + '/' + props.item.symbol\n    const stockRoute = process.env.REACT_APP_STOCK_PAGE\n    const getData = useContext(StockDataContext)[2]\n    const priceData = getData(props.item.symbol)\n    const [open, setOpen] = useState(false);\n    const handleOpen = () => setOpen(true);\n    const handleClose = () => setOpen(false);\n    const latest = React.useMemo(() => {\n        const dates = props.transactions.map(t => Date.parse(t.transactionTime))\n        return new Date(dates.reduce((a, b) => Math.max(a, b))).toISOString();\n    }, [props.transactions]);\n    const ref = createRef();\n\n    return (\n        <Fav>\n            <Content>\n                <div>\n                    <Symbol to={stockRoute + props.item.symbol}>{props.item.symbol}</Symbol>\n                    <BlueButtonRight><StyledLink to={tradeLink}>TRADE</StyledLink></BlueButtonRight>\n                    <BlueButtonRight onClick={handleOpen}>History</BlueButtonRight>\n                </div>\n                <Details>\n                    <Cell>\n                        <p>Last Transaction</p>\n                        {latest && latest.replace(\"T\", \" \").substring(0, latest.indexOf(\".\"))}\n                    </Cell>\n                    <Cell>\n                        <p>Total Owned</p>\n                        <p>{props.item.amount}</p>\n                    </Cell>\n                    <Cell>\n                        <p>Total Value</p>\n                        <p>{(props.item.amount * priceData.latestPrice).toFixed(2)}</p>\n                    </Cell>\n                    <Cell>\n                        <p>Latest Price</p>\n                        <p>{priceData.latestPrice}</p>\n                    </Cell>\n                </Details>\n                <Modal open={open} onClose={handleClose}>\n                    <History ref={ref} transactions={props.transactions} currency={props.currency} symbol={props.item.symbol} />\n                </Modal>\n            </Content>\n        </Fav>\n    )\n}\n\nconst Fav = styled.div`\n    margin: 3em auto;\n    border: 1px solid #21255e;\n    box-shadow: 5px 10px 5px #21255e;\n    display: flex;\n    flex-direction: row;\n    @media (max-width: 768px) {\n        font-size: 1.3em;\n        width: 100%;\n        margin: 3em auto;\n    }\n`\n\nconst Content = styled.div`\n    padding-left: 20px;\n    width: 100%\n`\n\nconst Symbol = styled(Link)`\n    font-size: 2em;\n    font-weight: bold;\n    float:left;\n    text-decoration:none;\n    color: black;\n`\n\nconst BlueButtonRight = styled.button`\n    background-color: #21255e;\n    color: white;\n    font-weight: bolder;\n    font-size: 1.2em;\n    cursor: pointer;\n    float: right;\n    margin: 5px;\n`\n\nconst Cell = styled.div`\n    text-align:center;\n    width: 25%;\n    @media (max-width: 768px) {\n        width: 85%;\n        display: flex;\n        flex-direction: row;\n        justify-content: space-between;\n        > p {\n            margin: 3px;\n        }\n    }\n`\n\nconst Details = styled.div`\n    display: flex;\n    flex-direction:row;\n    justify-content: space-evenly;\n    width: 100%;\n    @media (max-width: 768px) {\n        flex-direction: column;\n    }\n`\n\nconst StyledLink = styled(Link)`\n    color: white;\n    text-decoration: none;\n    & :visited{\n        color: white;\n        text-decoration: none\n    }\n`\n","import React, { useContext } from 'react'\nimport { StockDataContext } from '../StockDataContext';\nimport styled from 'styled-components';\n\nexport default function Summary(props) {\n\n    const stockData = useContext(StockDataContext)[1]\n    const accountBalance = props.user.account.balance\n    let stockValue = 0\n    \n    const getStockPrice = (symbol) => {\n        const [stock] = stockData.filter(s => s.symbol === symbol)\n        return stock.latestPrice\n    }\n\n    if (stockData.length !== 0) {\n        stockValue = props.user.portfolio.map(item => item.amount * getStockPrice(item.symbol)).reduce((a,b) => a + b, 0)\n    }\n\n    return (\n        <Table>\n            <tbody>\n                <StyledTr><TdLeft>Name: </TdLeft><TdRight>{props.user.firstName} {props.user.lastName}</TdRight></StyledTr>\n                <StyledTr><TdLeft>Balance: </TdLeft><TdRight>{accountBalance.toFixed(2)} {props.user.account.currency}</TdRight></StyledTr>\n                <StyledTr><TdLeft>Stock: </TdLeft><TdRight>{stockValue.toFixed(2)} USD</TdRight></StyledTr>\n                <StyledTr><TdLeft>Total worth: </TdLeft><TdRight>{(stockValue + accountBalance).toFixed(2)} USD</TdRight></StyledTr>\n            </tbody>\n        </Table>\n    )\n}\n\n\nconst TdLeft = styled.td`\n    border-bottom: 1px solid #ddd;\n    padding: 10px 10px 10px 0;\n    text-align: left;\n`\n\nconst TdRight = styled.td`\n    border-bottom: 1px solid #ddd;\n    padding: 10px;\n    text-align: right;\n`\n\nconst StyledTr = styled.tr`\n`\n\nconst Table = styled.table`\n    margin: 2em 0;\n    @media (max-width: 768px){\n        font-size: 1.3em;\n        margin-right: auto;\n    }\n`","import React, { useState, useEffect, useContext, Fragment } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport PortfolioItem from './PortfolioItem';\nimport Summary from './Summary';\nimport { UserContext } from '../UserContext';\nimport styled from 'styled-components';\n\n\nexport default function Portfolio() {\n    const [userData, setUserData] = useContext(UserContext)\n    const [redirect, setRedirect] = useState(false)\n    const [user, setUser] = useState(0)\n    const [owned, setOwned] = useState([])\n    const [previous, setPrevious] = useState([])\n    const userRoute = process.env.REACT_APP_ORIGIN + process.env.REACT_APP_USER_ROUTE\n    const loginRoute = process.env.REACT_APP_LOGIN_PAGE\n\n\n    useEffect(()=>{\n        if (document.cookie) {\n            const token = document.cookie.split('; ').find(row => row.startsWith('access_token=')).split('=')[1];\n            fetch(userRoute, {\n                    headers: {\n                        'Authorization': 'Bearer ' + token,\n                        'Content-Type': 'application/json;charset=utf-8'\n                    }\n                })\n                .then(handleBadRequest)\n                .then(resp => resp.json())\n                .then(data => {\n                    setUser(data)\n                    setOwned(data.portfolio.filter(i => i.amount > 0))\n                    setPrevious(data.portfolio.filter(i => i.amount === 0))\n                })\n                .catch(e => console.log(e))\n        }\n    }, [])\n\n    const handleBadRequest = (response) => {\n        if (!response.ok) {\n            if (response.status === 403) {\n                setRedirect(true)\n                setUserData({ loggedIn : false, userName : undefined })\n            }\n            throw Error(response.statusText)\n        }\n        else {\n            return response\n        }\n    }\n\n    return (\n    \n        <Fragment>\n        {redirect && <Redirect to={loginRoute} />}\n        {userData.loggedIn &&\n            <PortfolioDiv>\n                {user !== 0 ? \n                <React.Fragment>\n                    <h2>Account overview</h2>\n                    <Summary user={user} />\n                    {owned.length >= 1 ? \n                        <React.Fragment> \n                        <h2>Currently on portfolio</h2>\n                        {owned.map(s => \n                            <PortfolioItem \n                                key={s.id} \n                                item={s} \n                                currency={user.account.currency}\n                                transactions={user.userHistoryList.filter(o => o.symbol === s.symbol)} />)\n                            }\n                        </React.Fragment> : <React.Fragment/>}\n                    {previous.length >= 1 ? \n                        <React.Fragment> \n                            <h2>Previously on portfolio</h2>\n                            {previous.map(s => \n                                <PortfolioItem \n                                    key={s.id} \n                                    item={s} \n                                    currency={user.account.currency}\n                                    transactions={user.userHistoryList.filter(o => o.symbol === s.symbol)} />)\n                                }\n                        </React.Fragment> : <React.Fragment/>}\n                </React.Fragment> : \"Loading\"}\n            </PortfolioDiv>}\n        </Fragment>\n    )\n}\n\n\nconst PortfolioDiv = styled.div`\n    margin: auto;\n    width: 60%;\n    text-align: left;\n    @media (max-width: 768px) {\n        width: 80%;\n    }\n`","import React, { useContext, useState, useRef, Fragment } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { UserContext } from '../UserContext';\nimport { TextField, Button, Typography, Modal } from \"@material-ui/core\";\nimport styled from 'styled-components';\n\n\nexport default function LoginForm(props) {\n    const setUserData = useContext(UserContext)[1]\n    const [redirect, setRedirect] = useState(false)\n    const [open, setOpen] = useState(false)\n    const [message, setMessage] = useState(\"\")\n    const messageOpen = () => setOpen(true)\n    const messageClose = () => setOpen(false)\n    const loginEmail = useRef()\n    const loginPassword = useRef()\n    const [validEmailFeedback, setValidEmail] = useState(true)\n    const [validPasswordFeedback, setValidPassword,] = useState(true)\n    const [emailCharByChar, setEmailCharByChar] = useState(false)\n    const [anyEmpty, setAnyEmpty] = useState(true)\n    const loginRoute = process.env.REACT_APP_ORIGIN + process.env.REACT_APP_LOGIN_ROUTE\n    const portfolioRoute = process.env.REACT_APP_PORTFOLIO_PAGE\n\n\n    const messages = {\n        invalidUser: \"Invalid username or password!\"\n    }\n\n    const handleLogin = () => {\n        \n        if (!validateInput()) return    \n\n        const body = {\n            username: loginEmail.current.value,\n            password: loginPassword.current.value\n        }\n        fetch(loginRoute, {\n                method: \"post\",\n                body: JSON.stringify(body),\n                headers: {'Content-Type': 'application/json;charset=utf-8'}\n            })\n            .then(handleBadRequest)\n            .then(resp => resp.json())\n            .then(response => {\n                setUserData({\n                    loggedIn: true,\n                    username: response.username\n                })\n                document.cookie = `access_token=${response.token}`\n                setRedirect(true)\n            })\n            .catch(err => console.log(err))\n    }\n\n    const handleBadRequest = (response) => {\n        if (!response.ok) {\n            if (response.status === 403) {\n                setMessage(messages.invalidUser)\n                messageOpen()\n                throw Error(message)\n            }\n            throw Error(response.statusText)\n        }\n        else {\n            return response\n        }\n    }\n\n    const emailIsValid = () => /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(loginEmail.current.value)\n    const passwordIsValid = () => loginPassword.current.value.length !== 0\n    const isAnyEmpty = () => loginPassword.current.value.length === 0 || loginEmail.current.value.length === 0\n\n    const validateInput = () => {\n        setEmailCharByChar(true)\n        setValidEmail(emailIsValid())\n        setValidPassword(passwordIsValid())\n        return emailIsValid() && passwordIsValid()\n    }\n\n    return(\n    <StyledDiv>\n        {redirect && <Redirect to={portfolioRoute} />}\n        <Modal open={open} onClose={messageClose}><ModalContent>{message}</ModalContent></Modal>\n        <Fragment>\n        <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            label=\"Email Address\"\n            inputRef={loginEmail}\n            autoFocus\n            autoComplete=\"off\"\n            type=\"email\"\n            error={!validEmailFeedback}\n            onChange={ () => { \n                setAnyEmpty(isAnyEmpty())\n                if (emailCharByChar) setValidEmail(emailIsValid())\n            }}\n            helperText={validEmailFeedback ? \"\" : \"Invalid email\"}\n        />\n        <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            label=\"Password\"\n            type=\"password\"\n            inputRef={loginPassword}\n            autoComplete=\"off\"\n            error={!validPasswordFeedback}\n            onChange={ () => {\n                setAnyEmpty(isAnyEmpty())\n                setValidPassword(passwordIsValid())\n            }}\n            helperText={validPasswordFeedback ? \"\" : \"Invalid password input\"}\n        />\n        </Fragment>\n        <Fragment>\n        <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"secondary\"\n            disabled={anyEmpty}\n            size=\"large\"\n            onClick={handleLogin}\n        >\n            Login\n        </Button>\n        <Typography\n            align=\"center\"\n            color=\"primary\"\n            tabIndex={0}\n            role=\"button\"\n        >\n            Forgot Password?\n        </Typography>\n        </Fragment>\n    </StyledDiv>\n  );\n}\n\nconst StyledDiv = styled.div`\n    margin: auto auto;\n    width: 400px;\n`\n\nconst ModalContent = styled.div`\n    padding: 2em;\n    background-color:white;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n`\n","import React, { useState, useRef, Fragment } from 'react';\nimport styled from 'styled-components';\nimport { Redirect } from 'react-router-dom';\nimport { TextField, Button, Checkbox, Typography, FormControlLabel, Modal } from \"@material-ui/core\";\n\nexport default function RegistrationForm() {\n    const [hasTermsOfServiceError, setHasTermsOfServiceError] = useState(true)\n    const [open, setOpen] = useState(false)\n    const [redirect, setRedirect] = useState(false)\n    const [message, setMessage] = useState(\"\")\n    const messageOpen = () => setOpen(true)\n    const messageClose = () => setOpen(false)\n    const registrationRoute = process.env.REACT_APP_ORIGIN + process.env.REACT_APP_REGISTER_ROUTE\n    const loginRoute = process.env.REACT_APP_LOGIN_PAGE    \n\n    const registerFirstName = useRef()\n    const registerLastName = useRef()\n    const registerEmail = useRef()\n    const registerPassword = useRef()\n    const registerPasswordRepeat = useRef()\n    const registerTermsCheckbox = useRef()\n    const [validEmailFeedback, setValidEmail] = useState(true)\n    const [validFirstNameFeedback, setValidFirstName] = useState(true)\n    const [validLastNameFeedback, setValidLastName] = useState(true)\n    const [validPasswordFeedback, setValidPassword,] = useState(true)\n    const [passwordCharByChar, setPasswordCharByChar] = useState(false)\n    const [emailCharByChar, setEmailCharByChar] = useState(false)\n\n    const messages = {\n        serverError: \"Server could not complete the registration! Please try again later!\",\n        userExists: \"Username already taken!\"\n    }\n\n    const handleRegister = () => {\n        setPasswordCharByChar(true)\n        setEmailCharByChar(true)\n        if (!validFormData()) return\n\n        const body = {\n            firstName: registerFirstName.current.value,\n            lastName: registerLastName.current.value,\n            username: registerEmail.current.value,\n            password: registerPassword.current.value\n        }\n        fetch(registrationRoute, {\n                method: \"post\",\n                body: JSON.stringify(body),\n                headers: {'Content-Type': 'application/json;charset=utf-8'}\n            })\n            .then(handleBadRequest)\n            .then(resp => resp.json())\n            .then(response => {\n                if (response.success === true) {\n                    setRedirect(true)\n                }\n                else {\n                    setMessage(messages.serverError)\n                    messageOpen()\n                }\n            })\n            .catch(err => console.log(err))\n    }\n\n    const handleBadRequest = (response) => {\n        if (!response.ok) {\n            if (response.status === 409) {\n                setMessage(messages.userExists)\n                messageOpen()\n                throw Error(message)\n            }\n            throw Error(response.statusText)\n        }\n        else {\n            return response\n        }\n    }\n\n    const emailIsValid = () => {\n        const email = registerEmail.current.value;\n        return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)\n    }\n\n    const fieldIsValid = (text) => {\n        return text.length !== 0;\n    }\n\n    const passwordIsValid = () => {\n        const password1 = registerPassword.current.value;\n        const password2 = registerPasswordRepeat.current.value;\n        if (!fieldIsValid(password1)) {\n            return false\n        }\n        else {\n            return password1 === password2;\n        }\n    }\n\n    const validFormData = () => {\n        const firstValid = fieldIsValid(registerFirstName.current.value)\n        const lastValid = fieldIsValid(registerLastName.current.value)\n        const emailValid = emailIsValid()\n        const passwordValid = passwordIsValid()\n\n        setValidFirstName(firstValid)\n        setValidLastName(lastValid)\n        setValidEmail(emailValid)\n        setValidPassword(passwordValid)\n\n        return firstValid && lastValid && emailValid && passwordValid\n    }\n\n    return(\n    <StyledDiv>\n        {redirect === true ? <Redirect to={loginRoute} /> : <></>}\n        <Modal open={open} onClose={messageClose}><ModalContent>{message}</ModalContent></Modal>\n        <Fragment>\n        <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            label=\"First Name\"\n            autoFocus\n            inputRef={registerFirstName}\n            autoComplete=\"off\"\n            error={!validFirstNameFeedback}\n            onChange={ ()=> setValidFirstName(fieldIsValid(registerFirstName.current.value)) }\n            helperText={validFirstNameFeedback ? \"\" : \"Invalid first name\"}\n        />\n            <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            label=\"Last Name\"\n            autoFocus\n            inputRef={registerLastName}\n            autoComplete=\"off\"\n            error={!validLastNameFeedback}\n            onChange={ ()=> setValidLastName(fieldIsValid(registerLastName.current.value)) }\n            helperText={validLastNameFeedback ? \"\" : \"Invalid last name\"}\n        />\n        <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            label=\"Email Address\"\n            autoFocus\n            inputRef={registerEmail}\n            autoComplete=\"off\"\n            type=\"email\"\n            error={!validEmailFeedback}\n            onChange={ ()=> { if (emailCharByChar) setValidEmail(emailIsValid())} }\n            helperText={validEmailFeedback ? \"\" : \"Invalid email\"}\n        />\n        <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            label=\"Password\"\n            type=\"password\"\n            inputRef={registerPassword}\n            autoComplete=\"off\"\n            error={!validPasswordFeedback}\n            onChange={ ()=> { if (passwordCharByChar) setValidPassword(passwordIsValid())} }\n            helperText={validPasswordFeedback ? \"\" : \"Invalid password input\"}\n        />\n        <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            label=\"Repeat Password\"\n            type=\"password\"\n            inputRef={registerPasswordRepeat}\n            autoComplete=\"off\"\n            error={!validPasswordFeedback}\n            onChange={ ()=> {if (passwordCharByChar) setValidPassword(passwordIsValid())} }\n            helperText={validPasswordFeedback ? \"\" : \"Invalid password input\"}\n        />\n        <FormControlLabel\n            style={{ marginRight: 0 }}\n            control={\n            <Checkbox\n                color=\"primary\"\n                inputRef={registerTermsCheckbox}\n                onChange={event => {\n                setHasTermsOfServiceError(!event.target.checked)\n                }}\n            />\n            }\n            label={\n            <Typography variant=\"body1\">\n                I agree to the\n                <span\n                tabIndex={0}\n                role=\"button\"\n                >\n                {\" \"}\n                terms of service\n                </span>\n            </Typography>\n            }\n        />\n        </Fragment>\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          size=\"large\"\n          color=\"secondary\"\n          onClick={handleRegister}\n          disabled={hasTermsOfServiceError}\n        >\n          Register\n        </Button>\n    </StyledDiv>\n    );\n}\n\nconst StyledDiv = styled.div`\n    margin: auto auto;\n    width: 400px;\n`\n\nconst ModalContent = styled.div`\n    padding: 2em;\n    background-color:white;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n`","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport ReactMarkdown from \"react-markdown\";\n\nexport default function AboutPage() {\n\n    const [about, setAbout] = useState(\"\")\n    const aboutRoute = process.env.REACT_APP_ORIGIN + process.env.REACT_APP_ABOUT_ROUTE + process.env.REACT_APP_LANGUAGE\n\n    useEffect(() => {\n        fetch(aboutRoute)\n        .then(resp => resp.json())\n        .then(data => setAbout(data.details))\n    }, [about])\n\n    return (\n        <AboutContainer>{about}</AboutContainer>\n    )\n}\n\n\nconst AboutContainer = styled(ReactMarkdown)`\n    width: min(80%, 900px);\n    margin: 4em auto;\n    line-height: 1.5em;\n`","import React, {useState } from 'react';\nimport {Route, BrowserRouter as Router} from 'react-router-dom';\nimport {ThemeProvider} from 'styled-components';\nimport {DetailedView, ListMain, Navbar, SearchBar, StockDataProvider, UserProvider} from './components';\nimport { FavProvider } from './components/favourites/FavContext';\nimport { Favourites } from './components/favourites/Favourites';\nimport {themes} from './themes/themes';\nimport './App.css';\nimport Trade from './components/trade/Trade';\nimport Portfolio from './components/portfolio/Portfolio';\nimport LoginForm from './components/authentication/LoginForm';\nimport RegistrationForm from './components/authentication/RegistrationForm';\nimport AboutPage from './components/AboutPage';\n\n\nfunction App() {\n  const [theme, setTheme] = useState('light')\n\n  return (\n    <ThemeProvider theme={themes[theme]}>\n    <UserProvider>\n    <FavProvider>\n    <StockDataProvider>\n      <Router>\n        <div className=\"App\">\n          <Navbar currentTheme={theme} setTheme={setTheme}></Navbar>\n          <ListMain></ListMain>\n          <Route path={process.env.REACT_APP_FAVOURITES_PAGE} component={Favourites}></Route>\n          <Route exact path={process.env.REACT_APP_HOME_PAGE} component={SearchBar}></Route>\n          <Route path={process.env.REACT_APP_STOCK_PAGE + \":symbol\"} component={DetailedView}></Route>\n          <Route path={process.env.REACT_APP_TRADE_PAGE + \"/:symbol?\"} component={Trade}></Route>\n          <Route path={process.env.REACT_APP_PORTFOLIO_PAGE} component={Portfolio}></Route>\n          <Route path={process.env.REACT_APP_REGISTER_PAGE} component={RegistrationForm}></Route>\n          <Route path={process.env.REACT_APP_LOGIN_PAGE} component={LoginForm}></Route>\n          <Route path={process.env.REACT_APP_ABOUT_PAGE} component={AboutPage}></Route>\n        </div>\n      </Router>\n    </StockDataProvider>\n    </FavProvider>\n    </UserProvider>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nrequire('dotenv').config();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}